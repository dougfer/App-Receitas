{"ast":null,"code":"var _jsxFileName = \"/home/douglas/\\xC1rea de Trabalho/Projetos em geral/App-Receitas/src/Pages/Detalhes.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport RecipeContext from '../context/RecipeContext';\nimport '../styles/Detalhes.css';\nimport shareIcon from \"../images/shareIcon.svg\";\nimport Loading from '../components/Loading';\nimport RecommendedList from '../components/RecommendedList';\nimport ButtonIniciar from '../components/ButtonIniciar';\nimport HandleYoutube from '../services/HandleYoutube';\nimport LinkCopiado from '../components/LinkCopiado';\nimport FavoriteBtn from '../components/FavoriteBtn';\n\nfunction Detalhes() {\n  const history = useHistory();\n  const urlText = history.location.pathname;\n  const id = urlText.split('s/')[1];\n  const TWO_SECONDS = 2000;\n  const {\n    setShouldRedirect,\n    addStartedRecipes,\n    recommendedFood,\n    recommendedDrink,\n    setRecommendedFood,\n    setRecommendedDrink,\n    setCopied\n  } = useContext(RecipeContext);\n  const [objDetail, setObjDetail] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const requestRecommendedFood = async () => {\n    const response = await fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=');\n    const result = await response.json();\n    setRecommendedFood(result.meals);\n  };\n\n  const requestRecommendedDrink = async () => {\n    const response = await fetch('https://www.thecocktaildb.com/api/json/v1/1/search.php?s=');\n    const result = await response.json();\n    setRecommendedDrink(result.drinks);\n  };\n\n  const requestByID = async () => {\n    let response = [];\n\n    if (urlText.includes('bebidas')) {\n      response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const responseJson = await response.json();\n      await setObjDetail(responseJson.drinks);\n      requestRecommendedFood();\n    }\n\n    if (urlText.includes('comidas')) {\n      response = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const responseJson = await response.json();\n      await setObjDetail(responseJson.meals);\n      requestRecommendedDrink();\n    }\n\n    setTimeout(() => {\n      setLoading(false);\n    }, TWO_SECONDS);\n  };\n\n  const handleCopied = () => {\n    setCopied(true);\n    setTimeout(() => {\n      setCopied(false);\n    }, TWO_SECONDS);\n  };\n\n  const getIngredients = () => {\n    const ingredientes = Object.entries(objDetail[0]);\n    const measure = ingredientes.filter(elem => elem[0].includes('strMeasure') && elem[1] !== null && elem[1] !== '');\n    const filtering = ingredientes.filter(element => element[0].includes('strIngredient') && element[1] !== null && element[1] !== '');\n    const results = filtering.map((elem, index) => /*#__PURE__*/React.createElement(\"li\", {\n      key: elem[1],\n      \"data-testid\": `${index}-ingredient-name-and-measure`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, elem[1], /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, measure[index] === undefined ? '' : measure[index][1])));\n    return results;\n  };\n\n  useEffect(() => {\n    requestByID();\n    setShouldRedirect(false);\n  }, [history.location.pathname]);\n\n  const renderDrink = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, `${objDetail[0].strCategory} (${objDetail[0].strAlcoholic})`), /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, objDetail[0].strDrink), /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"recipe-photo\",\n    className: \"food-image\",\n    src: objDetail[0].strDrinkThumb,\n    alt: objDetail[0].strDrink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LinkCopiado, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CopyToClipboard, {\n    text: `http://localhost:3000${urlText}`,\n    onCopy: handleCopied,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"share-btn\",\n    type: \"image\",\n    \"data-testid\": \"share-btn\",\n    src: shareIcon,\n    alt: objDetail[0].strDrink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(FavoriteBtn, {\n    urlText: urlText,\n    objDetail: objDetail,\n    id: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"ol\", {\n    className: \"ingredient-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, getIngredients()), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, objDetail[0].strInstructions), /*#__PURE__*/React.createElement(RecommendedList, {\n    value: recommendedFood,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ButtonIniciar, {\n    onClick: () => addStartedRecipes(id),\n    id: id,\n    objDetail: objDetail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }));\n\n  const renderFood = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, objDetail[0].strCategory), /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, objDetail[0].strMeal), /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"recipe-photo\",\n    src: objDetail[0].strMealThumb,\n    alt: objDetail[0].strMeal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LinkCopiado, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CopyToClipboard, {\n    text: `http://localhost:3000${urlText}`,\n    onCopy: () => {\n      handleCopied();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"image\",\n    \"data-testid\": \"share-btn\",\n    src: shareIcon,\n    alt: objDetail[0].strMeal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(FavoriteBtn, {\n    urlText: urlText,\n    objDetail: objDetail,\n    id: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"ol\", {\n    className: \"ingredient-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }, getIngredients()), /*#__PURE__*/React.createElement(\"iframe\", {\n    \"data-testid\": \"video\",\n    width: \"300px\",\n    height: \"200px\",\n    src: HandleYoutube(objDetail[0]),\n    title: \"YouTube video player\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }, objDetail[0].strInstructions), /*#__PURE__*/React.createElement(RecommendedList, {\n    value: recommendedDrink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ButtonIniciar, {\n    onClick: () => addStartedRecipes(id),\n    id: id,\n    objDetail: objDetail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }));\n\n  const render = () => {\n    const value = history.location.pathname;\n    console.log(Object.keys(objDetail[0]));\n\n    if (value.includes('comidas')) {\n      return renderFood();\n    }\n\n    if (value.includes('bebidas')) {\n      return renderDrink();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 5\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 18\n    }\n  }) : render());\n}\n\nexport default Detalhes;","map":{"version":3,"sources":["/home/douglas/Área de Trabalho/Projetos em geral/App-Receitas/src/Pages/Detalhes.js"],"names":["React","useEffect","useState","useContext","useHistory","CopyToClipboard","RecipeContext","Loading","RecommendedList","ButtonIniciar","HandleYoutube","LinkCopiado","FavoriteBtn","Detalhes","history","urlText","location","pathname","id","split","TWO_SECONDS","setShouldRedirect","addStartedRecipes","recommendedFood","recommendedDrink","setRecommendedFood","setRecommendedDrink","setCopied","objDetail","setObjDetail","loading","setLoading","requestRecommendedFood","response","fetch","result","json","meals","requestRecommendedDrink","drinks","requestByID","includes","responseJson","setTimeout","handleCopied","getIngredients","ingredientes","Object","entries","measure","filter","elem","filtering","element","results","map","index","undefined","renderDrink","strCategory","strAlcoholic","strDrink","strDrinkThumb","shareIcon","strInstructions","renderFood","strMeal","strMealThumb","render","value","console","log","keys"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport RecipeContext from '../context/RecipeContext';\nimport '../styles/Detalhes.css';\nimport shareIcon from '../images/shareIcon.svg';\nimport Loading from '../components/Loading';\nimport RecommendedList from '../components/RecommendedList';\nimport ButtonIniciar from '../components/ButtonIniciar';\nimport HandleYoutube from '../services/HandleYoutube';\nimport LinkCopiado from '../components/LinkCopiado';\nimport FavoriteBtn from '../components/FavoriteBtn';\n\nfunction Detalhes() {\n  const history = useHistory();\n  const urlText = history.location.pathname;\n  const id = urlText.split('s/')[1];\n  const TWO_SECONDS = 2000;\n\n  const { setShouldRedirect, addStartedRecipes,\n    recommendedFood, recommendedDrink, setRecommendedFood,\n    setRecommendedDrink, setCopied } = useContext(RecipeContext);\n\n  const [objDetail, setObjDetail] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const requestRecommendedFood = async () => {\n    const response = await fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=');\n    const result = await response.json();\n    setRecommendedFood(result.meals);\n  };\n\n  const requestRecommendedDrink = async () => {\n    const response = await fetch('https://www.thecocktaildb.com/api/json/v1/1/search.php?s=');\n    const result = await response.json();\n    setRecommendedDrink(result.drinks);\n  };\n\n  const requestByID = async () => {\n    let response = [];\n    if (urlText.includes('bebidas')) {\n      response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const responseJson = await response.json();\n      await setObjDetail(responseJson.drinks);\n      requestRecommendedFood();\n    }\n    if (urlText.includes('comidas')) {\n      response = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const responseJson = await response.json();\n      await setObjDetail(responseJson.meals);\n      requestRecommendedDrink();\n    }\n    setTimeout(() => {\n      setLoading(false);\n    }, TWO_SECONDS);\n  };\n\n  const handleCopied = () => {\n    setCopied(true);\n    setTimeout(() => {\n      setCopied(false);\n    }, TWO_SECONDS);\n  };\n\n  const getIngredients = () => {\n    const ingredientes = Object.entries(objDetail[0]);\n\n    const measure = ingredientes.filter((elem) => (\n      elem[0].includes('strMeasure') && elem[1] !== null && elem[1] !== ''\n    ));\n    const filtering = ingredientes.filter((element) => (\n      element[0].includes('strIngredient') && element[1] !== null && element[1] !== ''));\n\n    const results = filtering.map((elem, index) => (\n      <li\n        key={ elem[1] }\n        data-testid={ `${index}-ingredient-name-and-measure` }\n      >\n        {elem[1]}\n        <span>{measure[index] === undefined ? '' : measure[index][1]}</span>\n      </li>));\n\n    return results;\n  };\n\n  useEffect(() => {\n    requestByID();\n    setShouldRedirect(false);\n  }, [history.location.pathname]);\n\n  const renderDrink = () => (\n    <div className=\"details\">\n      <h1\n        data-testid=\"recipe-category\"\n      >\n        {`${objDetail[0].strCategory} (${objDetail[0].strAlcoholic})`}\n      </h1>\n      <h2 data-testid=\"recipe-title\">{objDetail[0].strDrink}</h2>\n      <img\n        data-testid=\"recipe-photo\"\n        className=\"food-image\"\n        src={ objDetail[0].strDrinkThumb }\n        alt={ objDetail[0].strDrink }\n      />\n      <div className=\"icons\">\n        <LinkCopiado />\n        <CopyToClipboard\n          text={ `http://localhost:3000${urlText}` }\n          onCopy={ handleCopied }\n        >\n          <input\n            className=\"share-btn\"\n            type=\"image\"\n            data-testid=\"share-btn\"\n            src={ shareIcon }\n            alt={ objDetail[0].strDrink }\n          />\n        </CopyToClipboard>\n        <FavoriteBtn urlText={ urlText } objDetail={ objDetail } id={ id } />\n      </div>\n      <ol className=\"ingredient-list\">\n        { getIngredients() }\n      </ol>\n      <p data-testid=\"instructions\">{objDetail[0].strInstructions}</p>\n      <RecommendedList value={ recommendedFood } />\n      <ButtonIniciar\n        onClick={ () => addStartedRecipes(id) }\n        id={ id }\n        objDetail={ objDetail }\n      />\n    </div>\n  );\n\n  const renderFood = () => (\n    <div className=\"details\">\n      <h1 data-testid=\"recipe-category\">{objDetail[0].strCategory}</h1>\n      <h2 data-testid=\"recipe-title\">{objDetail[0].strMeal}</h2>\n      <img\n        data-testid=\"recipe-photo\"\n        src={ objDetail[0].strMealThumb }\n        alt={ objDetail[0].strMeal }\n      />\n      <div className=\"icons\">\n        <LinkCopiado />\n        <CopyToClipboard\n          text={ `http://localhost:3000${urlText}` }\n          onCopy={ () => {\n            handleCopied();\n          } }\n        >\n          <input\n            type=\"image\"\n            data-testid=\"share-btn\"\n            src={ shareIcon }\n            alt={ objDetail[0].strMeal }\n          />\n        </CopyToClipboard>\n        <FavoriteBtn urlText={ urlText } objDetail={ objDetail } id={ id } />\n      </div>\n      <ol className=\"ingredient-list\">\n        { getIngredients() }\n      </ol>\n      <iframe\n        data-testid=\"video\"\n        width=\"300px\"\n        height=\"200px\"\n        src={ HandleYoutube(objDetail[0]) }\n        title=\"YouTube video player\"\n      />\n      <p data-testid=\"instructions\">{objDetail[0].strInstructions}</p>\n      <RecommendedList value={ recommendedDrink } />\n      <ButtonIniciar\n        onClick={ () => addStartedRecipes(id) }\n        id={ id }\n        objDetail={ objDetail }\n      />\n    </div>\n  );\n\n  const render = () => {\n    const value = history.location.pathname;\n    console.log(Object.keys(objDetail[0]));\n    if (value.includes('comidas')) {\n      return renderFood();\n    }\n    if (value.includes('bebidas')) {\n      return renderDrink();\n    }\n  };\n\n  return (\n    <div>\n      {loading ? <Loading /> : render()}\n    </div>\n  );\n}\n\nexport default Detalhes;\n"]},"metadata":{},"sourceType":"module"}