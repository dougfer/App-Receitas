{"ast":null,"code":"var _jsxFileName = \"/home/douglas/\\xC1rea de Trabalho/Trybe/trybe-exercises/Projetos/FrontEnd/sd-08-project-recipes-app/src/Pages/Explorar/ExplorarBebidasIngredientes.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipeContext from '../../context/RecipeContext';\nimport Header from '../../components/Header';\nimport Footer from '../../components/Footer';\n\nfunction ExplorarBebidasIngredientes({\n  history\n}) {\n  const {\n    setMeals,\n    setIsDrinkLoading,\n    setCameFromIngredients\n  } = useContext(RecipeContext);\n  const [ingredientes, setIngredientes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const TWELVE_INGREDIENTS = 12;\n\n  const fetchIngredients = async () => {\n    const response = await fetch('https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list');\n    const result = await response.json();\n    const finalResults = result.drinks.filter((elem, index) => {\n      if (index < TWELVE_INGREDIENTS) {\n        return elem;\n      }\n\n      return '';\n    });\n    setIngredientes(finalResults);\n    setLoading(false);\n  };\n\n  const fetchAndRedirect = async ({\n    target\n  }) => {\n    setIsDrinkLoading(true);\n    setCameFromIngredients(true);\n    const ingredientName = target.parentNode.firstChild.innerText;\n    console.log(ingredientName);\n    fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${ingredientName}`).then(response => response.json()).then(data => setMeals(data.drinks)).then(() => history.push('/bebidas')).then(() => {\n      setIsDrinkLoading(false);\n      setCameFromIngredients(true);\n    });\n  };\n\n  useEffect(() => {\n    fetchIngredients();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"explore-big per-ingredients\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    title: \"Explorar Ingredientes\",\n    search: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, !loading && ingredientes.map((elem, index) => /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: `${index}-checkbox`,\n    key: `${elem.idIngredient1}, ${index} `,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    key: `${elem.idIngredient1}, ${index} `,\n    \"data-testid\": `${index}-ingredient-card`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    \"data-testid\": `${index}-card-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, elem.strIngredient1), /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": `${index}-card-img`,\n    src: `https://www.thecocktaildb.com/images/ingredients/${elem.strIngredient1}-Small.png`,\n    alt: elem.strIngredient1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: `${index}-checkbox`,\n    onChange: fetchAndRedirect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }));\n}\n\nExplorarBebidasIngredientes.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func\n  }).isRequired\n};\nexport default ExplorarBebidasIngredientes;","map":{"version":3,"sources":["/home/douglas/Área de Trabalho/Trybe/trybe-exercises/Projetos/FrontEnd/sd-08-project-recipes-app/src/Pages/Explorar/ExplorarBebidasIngredientes.js"],"names":["React","useEffect","useState","useContext","PropTypes","RecipeContext","Header","Footer","ExplorarBebidasIngredientes","history","setMeals","setIsDrinkLoading","setCameFromIngredients","ingredientes","setIngredientes","loading","setLoading","TWELVE_INGREDIENTS","fetchIngredients","response","fetch","result","json","finalResults","drinks","filter","elem","index","fetchAndRedirect","target","ingredientName","parentNode","firstChild","innerText","console","log","then","data","push","map","idIngredient1","strIngredient1","propTypes","shape","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipeContext from '../../context/RecipeContext';\nimport Header from '../../components/Header';\nimport Footer from '../../components/Footer';\n\nfunction ExplorarBebidasIngredientes({ history }) {\n  const {\n    setMeals, setIsDrinkLoading, setCameFromIngredients } = useContext(RecipeContext);\n  const [ingredientes, setIngredientes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const TWELVE_INGREDIENTS = 12;\n\n  const fetchIngredients = async () => {\n    const response = await fetch('https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list');\n    const result = await response.json();\n    const finalResults = result.drinks.filter((elem, index) => {\n      if (index < TWELVE_INGREDIENTS) {\n        return elem;\n      }\n      return '';\n    });\n    setIngredientes(finalResults);\n    setLoading(false);\n  };\n\n  const fetchAndRedirect = async ({ target }) => {\n    setIsDrinkLoading(true);\n    setCameFromIngredients(true);\n    const ingredientName = target.parentNode.firstChild.innerText;\n    console.log(ingredientName);\n    fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${ingredientName}`)\n      .then((response) => response.json())\n      .then((data) => setMeals(data.drinks))\n      .then(() => history.push('/bebidas'))\n      .then(() => {\n        setIsDrinkLoading(false);\n        setCameFromIngredients(true);\n      });\n  };\n\n  useEffect(() => {\n    fetchIngredients();\n  }, []);\n\n  return (\n    <div className=\"explore-big per-ingredients\">\n      <Header title=\"Explorar Ingredientes\" search={ false } />\n      <div className=\"list\">\n\n        {!loading && ingredientes.map((elem, index) => (\n          <label\n            htmlFor={ `${index}-checkbox` }\n            key={ `${elem.idIngredient1}, ${index} ` }\n          >\n            <div\n              key={ `${elem.idIngredient1}, ${index} ` }\n              data-testid={ `${index}-ingredient-card` }\n            >\n              <h5 data-testid={ `${index}-card-name` }>\n                {elem.strIngredient1}\n              </h5>\n              <img\n                data-testid={ `${index}-card-img` }\n                src={ `https://www.thecocktaildb.com/images/ingredients/${elem.strIngredient1}-Small.png` }\n                alt={ elem.strIngredient1 }\n              />\n            </div>\n            <input\n              type=\"checkbox\"\n              id={ `${index}-checkbox` }\n              onChange={ fetchAndRedirect }\n            />\n          </label>\n        ))}\n      </div>\n\n      <Footer />\n    </div>\n  );\n}\n\nExplorarBebidasIngredientes.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nexport default ExplorarBebidasIngredientes;\n"]},"metadata":{},"sourceType":"module"}