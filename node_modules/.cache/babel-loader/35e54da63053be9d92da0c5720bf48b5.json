{"ast":null,"code":"var _jsxFileName = \"/home/douglas/\\xC1rea de Trabalho/Trybe/trybe-exercises/Projetos/FrontEnd/sd-08-project-recipes-app/src/components/ButtonIniciar.js\";\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport RecipeContext from '../context/RecipeContext';\n\nfunction ButtonIniciar({\n  onClick,\n  id,\n  ingredients\n}) {\n  const {\n    startedRecipes\n  } = useContext(RecipeContext);\n  const history = useHistory();\n  const value = history.location.pathname;\n\n  if (value.includes('comidas')) {\n    return renderFood();\n  }\n\n  if (value.includes('bebidas')) {\n    return renderDrink();\n  }\n\n  const inProgressRecipes = {\n    cocktails: {},\n    meals: {}\n  };\n\n  const localStorage = () => {\n    localStorage.setItem((id, ingredients));\n  };\n\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"start-recipe-btn\",\n    type: \"button\",\n    \"data-testid\": \"start-recipe-btn\",\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, startedRecipes.some(elem => elem === id) ? 'Continuar Receita' : 'Iniciar Receita');\n}\n\nButtonIniciar.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired\n};\nexport default ButtonIniciar;","map":{"version":3,"sources":["/home/douglas/Área de Trabalho/Trybe/trybe-exercises/Projetos/FrontEnd/sd-08-project-recipes-app/src/components/ButtonIniciar.js"],"names":["React","useContext","PropTypes","useHistory","RecipeContext","ButtonIniciar","onClick","id","ingredients","startedRecipes","history","value","location","pathname","includes","renderFood","renderDrink","inProgressRecipes","cocktails","meals","localStorage","setItem","some","elem","propTypes","func","isRequired","string"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,aAAP,MAA0B,0BAA1B;;AAEA,SAASC,aAAT,CAAuB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,EAAX;AAAeC,EAAAA;AAAf,CAAvB,EAAqD;AACnD,QAAM;AAAEC,IAAAA;AAAF,MAAqBR,UAAU,CAACG,aAAD,CAArC;AACA,QAAMM,OAAO,GAAGP,UAAU,EAA1B;AACA,QAAMQ,KAAK,GAAGD,OAAO,CAACE,QAAR,CAAiBC,QAA/B;;AACA,MAAIF,KAAK,CAACG,QAAN,CAAe,SAAf,CAAJ,EAA+B;AAC7B,WAAOC,UAAU,EAAjB;AACD;;AACD,MAAIJ,KAAK,CAACG,QAAN,CAAe,SAAf,CAAJ,EAA+B;AAC7B,WAAOE,WAAW,EAAlB;AACD;;AAED,QAAMC,iBAAiB,GAAG;AACxBC,IAAAA,SAAS,EAAE,EADa;AAExBC,IAAAA,KAAK,EAAE;AAFiB,GAA1B;;AAKA,QAAMC,YAAY,GAAG,MAAM;AACzBA,IAAAA,YAAY,CAACC,OAAb,EAAsBd,EAAE,EAAEC,WAA1B;AACD,GAFD;;AAIA,sBACE;AACE,IAAA,SAAS,EAAC,kBADZ;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,mBAAY,kBAHd;AAIE,IAAA,OAAO,EAAGF,OAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGG,cAAc,CAACa,IAAf,CAAqBC,IAAD,IAAUA,IAAI,KAAKhB,EAAvC,IACG,mBADH,GACyB,iBAP5B,CADF;AAWD;;AAEDF,aAAa,CAACmB,SAAd,GAA0B;AACxBlB,EAAAA,OAAO,EAAEJ,SAAS,CAACuB,IAAV,CAAeC,UADA;AAExBnB,EAAAA,EAAE,EAAEL,SAAS,CAACyB,MAAV,CAAiBD;AAFG,CAA1B;AAKA,eAAerB,aAAf","sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport RecipeContext from '../context/RecipeContext';\n\nfunction ButtonIniciar({ onClick, id, ingredients }) {\n  const { startedRecipes } = useContext(RecipeContext);\n  const history = useHistory();\n  const value = history.location.pathname;\n  if (value.includes('comidas')) {\n    return renderFood();\n  }\n  if (value.includes('bebidas')) {\n    return renderDrink();\n  }\n\n  const inProgressRecipes = {\n    cocktails: {},\n    meals: {},\n  };\n\n  const localStorage = () => {\n    localStorage.setItem((id, ingredients));\n  }\n\n  return (\n    <button\n      className=\"start-recipe-btn\"\n      type=\"button\"\n      data-testid=\"start-recipe-btn\"\n      onClick={ onClick }\n    >\n      {startedRecipes.some((elem) => elem === id)\n        ? 'Continuar Receita' : 'Iniciar Receita' }\n    </button>\n  );\n}\n\nButtonIniciar.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default ButtonIniciar;\n"]},"metadata":{},"sourceType":"module"}