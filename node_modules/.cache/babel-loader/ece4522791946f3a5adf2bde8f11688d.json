{"ast":null,"code":"var _jsxFileName = \"/home/douglas/\\xC1rea de Trabalho/Trybe/trybe-exercises/Projetos/FrontEnd/sd-08-project-recipes-app/src/components/RecommendedCard.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useHistory } from 'react-router-dom';\nimport '../styles/RecommendedCard.css';\n\nfunction RecommendedCard({\n  index,\n  card\n}) {\n  const history = useHistory();\n\n  const renderDrink = () => {\n    const {\n      strDrink,\n      strDrinkThumb,\n      idDrink\n    } = card;\n    return /*#__PURE__*/React.createElement(Link, {\n      to: `/bebidas/${idDrink}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"recommended-card\",\n      \"data-testid\": `${index}-recomendation-card`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      \"data-testid\": `${index}-recomendation-title`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }\n    }, strDrink), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"recommended-image\",\n      \"data-testid\": `${index}-card-img`,\n      src: strDrinkThumb,\n      alt: strDrink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  const renderFood = () => {\n    const {\n      strMeal,\n      strMealThumb,\n      idMeal\n    } = card;\n    return /*#__PURE__*/React.createElement(Link, {\n      to: `/comidas/${idMeal}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"recommended-card\",\n      \"data-testid\": `${index}-recomendation-card`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      \"data-testid\": `${index}-recomendation-title`,\n      className: \"food-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }, strMeal), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"recommended-image\",\n      \"data-testid\": `${index}-card-img`,\n      src: strMealThumb,\n      alt: strMeal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  const render = () => {\n    const value = history.location.pathname;\n\n    if (value.includes('comidas')) {\n      return renderDrink();\n    }\n\n    if (value.includes('bebidas')) {\n      return renderFood();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-testid\": `${index}-recipe-card`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, render());\n}\n\nRecommendedCard.propTypes = {\n  index: PropTypes.number.isRequired,\n  card: PropTypes.shape({\n    strDrink: PropTypes.string,\n    strDrinkThumb: PropTypes.string,\n    strMeal: PropTypes.string,\n    strMealThumb: PropTypes.string,\n    idMeal: PropTypes.string,\n    idDrink: PropTypes.string\n  }).isRequired\n};\nexport default RecommendedCard;","map":{"version":3,"sources":["/home/douglas/Área de Trabalho/Trybe/trybe-exercises/Projetos/FrontEnd/sd-08-project-recipes-app/src/components/RecommendedCard.js"],"names":["React","PropTypes","Link","useHistory","RecommendedCard","index","card","history","renderDrink","strDrink","strDrinkThumb","idDrink","renderFood","strMeal","strMealThumb","idMeal","render","value","location","pathname","includes","propTypes","number","isRequired","shape","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport '../styles/RecommendedCard.css';\n\nfunction RecommendedCard({ index, card }) {\n  const history = useHistory();\n\n  const renderDrink = () => {\n    const { strDrink, strDrinkThumb, idDrink } = card;\n    return (\n      <Link to={ `/bebidas/${idDrink}` }>\n        <div\n          className=\"recommended-card\"\n          data-testid={ `${index}-recomendation-card` }\n        >\n          <h1 data-testid={ `${index}-recomendation-title` }>{strDrink}</h1>\n          <img\n            className=\"recommended-image\"\n            data-testid={ `${index}-card-img` }\n            src={ strDrinkThumb }\n            alt={ strDrink }\n          />\n        </div>\n      </Link>\n    );\n  };\n\n  const renderFood = () => {\n    const { strMeal, strMealThumb, idMeal } = card;\n    return (\n      <Link to={ `/comidas/${idMeal}` }>\n        <div\n          className=\"recommended-card\"\n          data-testid={ `${index}-recomendation-card` }\n        >\n          <h1\n            data-testid={ `${index}-recomendation-title` }\n            className=\"food-title\"\n          >\n            {strMeal}\n          </h1>\n          <img\n            className=\"recommended-image\"\n            data-testid={ `${index}-card-img` }\n            src={ strMealThumb }\n            alt={ strMeal }\n          />\n        </div>\n      </Link>\n    );\n  };\n\n  const render = () => {\n    const value = history.location.pathname;\n    if (value.includes('comidas')) {\n      return renderDrink();\n    }\n    if (value.includes('bebidas')) {\n      return renderFood();\n    }\n  };\n\n  return (\n    <div data-testid={ `${index}-recipe-card` }>\n      {render()}\n    </div>\n  );\n}\n\nRecommendedCard.propTypes = {\n  index: PropTypes.number.isRequired,\n  card: PropTypes.shape({\n    strDrink: PropTypes.string,\n    strDrinkThumb: PropTypes.string,\n    strMeal: PropTypes.string,\n    strMealThumb: PropTypes.string,\n    idMeal: PropTypes.string,\n    idDrink: PropTypes.string,\n  }).isRequired,\n};\n\nexport default RecommendedCard;\n"]},"metadata":{},"sourceType":"module"}