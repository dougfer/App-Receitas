{"ast":null,"code":"var _jsxFileName = \"/home/douglas/\\xC1rea de Trabalho/Projetos em geral/App-Receitas/src/components/SearchBar.js\";\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport RecipeContext from '../context/RecipeContext';\nimport '../styles/SearchBar.css';\n\nfunction SearchBar(props) {\n  const {\n    title\n  } = props;\n  const {\n    setSearchType,\n    setSearchInputValue,\n    searchInputValue,\n    searchType,\n    searchBarRequestDrink,\n    searchBarRequestFood,\n    meals,\n    shouldRedirect\n  } = useContext(RecipeContext);\n  const history = useHistory();\n\n  const requestAPI = async value => {\n    if (value === 'Comidas') {\n      await searchBarRequestFood(searchType, searchInputValue);\n    }\n\n    if (value === 'Bebidas') {\n      await searchBarRequestDrink(searchType, searchInputValue);\n    }\n  };\n\n  const redirect = value => {\n    if (meals.length === 1) {\n      if (value === 'Comidas') {\n        history.push(`/comidas/${meals[0].idMeal}`);\n      }\n\n      if (value === 'Bebidas') {\n        history.push(`/bebidas/${meals[0].idDrink}`);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, shouldRedirect && redirect(title), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    \"data-testid\": \"search-input\",\n    value: searchInputValue,\n    onChange: ({\n      target\n    }) => setSearchInputValue(target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"ingrediente\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"searchRadio\",\n    id: \"ingrediente\",\n    \"data-testid\": \"ingredient-search-radio\",\n    value: \"ingrediente\",\n    defaultChecked: true,\n    onChange: ({\n      target\n    }) => setSearchType(target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), \"ingrediente\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"nome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"searchRadio\",\n    id: \"nome\",\n    \"data-testid\": \"name-search-radio\",\n    value: \"nome\",\n    onChange: ({\n      target\n    }) => setSearchType(target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), \"nome\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"primeira-letra\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"searchRadio\",\n    id: \"primeira-letra\",\n    \"data-testid\": \"first-letter-search-radio\",\n    value: \"primeira letra\",\n    onChange: ({\n      target\n    }) => setSearchType(target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), \"primeira letra\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"exec-search-btn\",\n    onClick: () => requestAPI(title),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, \"Buscar\"));\n}\n\nSearchBar.propTypes = {\n  title: PropTypes.string.isRequired\n};\nexport default SearchBar;","map":{"version":3,"sources":["/home/douglas/Área de Trabalho/Projetos em geral/App-Receitas/src/components/SearchBar.js"],"names":["React","useContext","PropTypes","useHistory","RecipeContext","SearchBar","props","title","setSearchType","setSearchInputValue","searchInputValue","searchType","searchBarRequestDrink","searchBarRequestFood","meals","shouldRedirect","history","requestAPI","value","redirect","length","push","idMeal","idDrink","target","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport RecipeContext from '../context/RecipeContext';\n\nimport '../styles/SearchBar.css';\n\nfunction SearchBar(props) {\n  const { title } = props;\n  const { setSearchType,\n    setSearchInputValue,\n    searchInputValue,\n    searchType,\n    searchBarRequestDrink,\n    searchBarRequestFood,\n    meals,\n    shouldRedirect,\n  } = useContext(RecipeContext);\n  const history = useHistory();\n\n  const requestAPI = async (value) => {\n    if (value === 'Comidas') {\n      await searchBarRequestFood(searchType, searchInputValue);\n    }\n    if (value === 'Bebidas') {\n      await searchBarRequestDrink(searchType, searchInputValue);\n    }\n  };\n\n  const redirect = (value) => {\n    if (meals.length === 1) {\n      if (value === 'Comidas') {\n        history.push(`/comidas/${meals[0].idMeal}`);\n      }\n      if (value === 'Bebidas') {\n        history.push(`/bebidas/${meals[0].idDrink}`);\n      }\n    }\n  };\n\n  return (\n    <div className=\"search-body\">\n      {shouldRedirect && redirect(title)}\n      <input\n        type=\"text\"\n        data-testid=\"search-input\"\n        value={ searchInputValue }\n        onChange={ ({ target }) => setSearchInputValue(target.value) }\n      />\n      <label htmlFor=\"ingrediente\">\n        <input\n          type=\"radio\"\n          name=\"searchRadio\"\n          id=\"ingrediente\"\n          data-testid=\"ingredient-search-radio\"\n          value=\"ingrediente\"\n          defaultChecked\n          onChange={ ({ target }) => setSearchType(target.value) }\n        />\n        ingrediente\n      </label>\n      <label htmlFor=\"nome\">\n        <input\n          type=\"radio\"\n          name=\"searchRadio\"\n          id=\"nome\"\n          data-testid=\"name-search-radio\"\n          value=\"nome\"\n          onChange={ ({ target }) => setSearchType(target.value) }\n        />\n        nome\n      </label>\n      <label htmlFor=\"primeira-letra\">\n        <input\n          type=\"radio\"\n          name=\"searchRadio\"\n          id=\"primeira-letra\"\n          data-testid=\"first-letter-search-radio\"\n          value=\"primeira letra\"\n          onChange={ ({ target }) => setSearchType(target.value) }\n        />\n        primeira letra\n      </label>\n      <button\n        type=\"button\"\n        data-testid=\"exec-search-btn\"\n        onClick={ () => requestAPI(title) }\n      >\n        Buscar\n      </button>\n    </div>\n  );\n}\n\nSearchBar.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}