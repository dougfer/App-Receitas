{"ast":null,"code":"var _jsxFileName = \"/home/douglas/\\xC1rea de Trabalho/Trybe/trybe-exercises/Projetos/FrontEnd/sd-08-project-recipes-app/src/components/ButtonIniciar.js\";\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport RecipeContext from '../context/RecipeContext';\n\nfunction ButtonIniciar({\n  onClick,\n  id,\n  ingredients,\n  objDetail\n}) {\n  const {\n    startedRecipes\n  } = useContext(RecipeContext);\n  const history = useHistory();\n\n  const getIngredients = () => {\n    const ingredientes = Object.entries(objDetail[0]);\n    const filtering = ingredientes.filter(element => element[0].includes('strIngredient') && element[1] !== null && element[1] !== '');\n    const results = filtering.map((elem, index) => elem[1]);\n    return results;\n  };\n\n  const value = history.location.pathname;\n\n  const localStorage = () => {\n    const inProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n    if (value.includes('comidas')) {\n      localStorage.setItem('inProgressRecipes', JSON.stringify({ ...inProgress,\n        meals: { ...inProgress.meals,\n          [id]: ingredients\n        }\n      }));\n    }\n\n    if (value.includes('bebidas')) {\n      localStorage.setItem('inProgressRecipes', JSON.stringify({ ...inProgress,\n        cocktails: { ...inProgress.cocktails,\n          [id]: ingredients\n        }\n      }));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"start-recipe-btn\",\n    type: \"button\",\n    \"data-testid\": \"start-recipe-btn\",\n    onClick: localStorage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, startedRecipes.some(elem => elem === id) ? 'Continuar Receita' : 'Iniciar Receita');\n}\n\nButtonIniciar.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired\n};\nexport default ButtonIniciar;","map":{"version":3,"sources":["/home/douglas/Área de Trabalho/Trybe/trybe-exercises/Projetos/FrontEnd/sd-08-project-recipes-app/src/components/ButtonIniciar.js"],"names":["React","useContext","PropTypes","useHistory","RecipeContext","ButtonIniciar","onClick","id","ingredients","objDetail","startedRecipes","history","getIngredients","ingredientes","Object","entries","filtering","filter","element","includes","results","map","elem","index","value","location","pathname","localStorage","inProgress","JSON","parse","getItem","setItem","stringify","meals","cocktails","some","propTypes","func","isRequired","string"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,aAAP,MAA0B,0BAA1B;;AAEA,SAASC,aAAT,CAAuB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,EAAX;AAAeC,EAAAA,WAAf;AAA4BC,EAAAA;AAA5B,CAAvB,EAAgE;AAC9D,QAAM;AAAEC,IAAAA;AAAF,MAAqBT,UAAU,CAACG,aAAD,CAArC;AACA,QAAMO,OAAO,GAAGR,UAAU,EAA1B;;AAEA,QAAMS,cAAc,GAAG,MAAM;AAC3B,UAAMC,YAAY,GAAGC,MAAM,CAACC,OAAP,CAAeN,SAAS,CAAC,CAAD,CAAxB,CAArB;AAEA,UAAMO,SAAS,GAAGH,YAAY,CAACI,MAAb,CAAqBC,OAAD,IACpCA,OAAO,CAAC,CAAD,CAAP,CAAWC,QAAX,CAAoB,eAApB,KAAwCD,OAAO,CAAC,CAAD,CAAP,KAAe,IAAvD,IAA+DA,OAAO,CAAC,CAAD,CAAP,KAAe,EAD9D,CAAlB;AAGA,UAAME,OAAO,GAAGJ,SAAS,CAACK,GAAV,CAAc,CAACC,IAAD,EAAOC,KAAP,KAAiBD,IAAI,CAAC,CAAD,CAAnC,CAAhB;AAEA,WAAOF,OAAP;AACD,GATD;;AAWA,QAAMI,KAAK,GAAGb,OAAO,CAACc,QAAR,CAAiBC,QAA/B;;AAEA,QAAMC,YAAY,GAAG,MAAM;AACzB,UAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACI,OAAb,CAAsB,mBAAtB,CAAX,CAAnB;;AAEA,QAAIP,KAAK,CAACL,QAAN,CAAe,SAAf,CAAJ,EAA+B;AAC7BQ,MAAAA,YAAY,CAACK,OAAb,CAAqB,mBAArB,EAA0CH,IAAI,CAACI,SAAL,CAAe,EACvD,GAAGL,UADoD;AAEvDM,QAAAA,KAAK,EAAE,EACL,GAAGN,UAAU,CAACM,KADT;AAEL,WAAC3B,EAAD,GAAMC;AAFD;AAFgD,OAAf,CAA1C;AAOD;;AACD,QAAIgB,KAAK,CAACL,QAAN,CAAe,SAAf,CAAJ,EAA+B;AAC7BQ,MAAAA,YAAY,CAACK,OAAb,CAAqB,mBAArB,EAA0CH,IAAI,CAACI,SAAL,CAAe,EACvD,GAAGL,UADoD;AAEvDO,QAAAA,SAAS,EAAE,EACT,GAAGP,UAAU,CAACO,SADL;AAET,WAAC5B,EAAD,GAAMC;AAFG;AAF4C,OAAf,CAA1C;AAOD;AACF,GArBD;;AAuBA,sBACE;AACE,IAAA,SAAS,EAAC,kBADZ;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,mBAAY,kBAHd;AAIE,IAAA,OAAO,EAAGmB,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGjB,cAAc,CAAC0B,IAAf,CAAqBd,IAAD,IAAUA,IAAI,KAAKf,EAAvC,IACG,mBADH,GACyB,iBAP5B,CADF;AAWD;;AAEDF,aAAa,CAACgC,SAAd,GAA0B;AACxB/B,EAAAA,OAAO,EAAEJ,SAAS,CAACoC,IAAV,CAAeC,UADA;AAExBhC,EAAAA,EAAE,EAAEL,SAAS,CAACsC,MAAV,CAAiBD;AAFG,CAA1B;AAKA,eAAelC,aAAf","sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport RecipeContext from '../context/RecipeContext';\n\nfunction ButtonIniciar({ onClick, id, ingredients, objDetail }) {\n  const { startedRecipes } = useContext(RecipeContext);\n  const history = useHistory();\n\n  const getIngredients = () => {\n    const ingredientes = Object.entries(objDetail[0]);\n\n    const filtering = ingredientes.filter((element) => (\n      element[0].includes('strIngredient') && element[1] !== null && element[1] !== ''));\n\n    const results = filtering.map((elem, index) => elem[1]);\n\n    return results;\n  };\n\n  const value = history.location.pathname;\n\n  const localStorage = () => {\n    const inProgress = JSON.parse(localStorage.getItem(('inProgressRecipes')));\n\n    if (value.includes('comidas')) {\n      localStorage.setItem('inProgressRecipes', JSON.stringify({\n        ...inProgress,\n        meals: {\n          ...inProgress.meals,\n          [id]: ingredients,\n        },\n      }));\n    }\n    if (value.includes('bebidas')) {\n      localStorage.setItem('inProgressRecipes', JSON.stringify({\n        ...inProgress,\n        cocktails: {\n          ...inProgress.cocktails,\n          [id]: ingredients,\n        },\n      }));\n    }\n  };\n\n  return (\n    <button\n      className=\"start-recipe-btn\"\n      type=\"button\"\n      data-testid=\"start-recipe-btn\"\n      onClick={ localStorage }\n    >\n      {startedRecipes.some((elem) => elem === id)\n        ? 'Continuar Receita' : 'Iniciar Receita' }\n    </button>\n  );\n}\n\nButtonIniciar.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default ButtonIniciar;\n"]},"metadata":{},"sourceType":"module"}