{"ast":null,"code":"var _jsxFileName = \"/home/douglas/\\xC1rea de Trabalho/Projetos em geral/App-Receitas/src/Pages/DetalhesInProgress.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport '../styles/Detalhes.css';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport shareIcon from \"../images/shareIcon.svg\";\nimport Loading from '../components/Loading';\nimport RecipeContext from '../context/RecipeContext';\nimport LinkCopiado from '../components/LinkCopiado';\nimport ButtonFinish from '../components/ButtonFinish';\nimport IngredientsCheckbox from '../components/IngredientsCheckbox';\nimport FavoriteBtn from '../components/FavoriteBtn';\n\nfunction DetalhesInProgress() {\n  const TWO_SECONDS = 2000;\n  const history = useHistory();\n  const urlText = history.location.pathname;\n  const urlDetails = urlText.split('/in-progress');\n  console.log(urlDetails[0]);\n  const id = urlText.split('/')[2];\n  const [objDetail, setObjDetail] = useState([]);\n  const [loading, setLoading] = useState(true);\n  console.log(objDetail);\n  const {\n    setCopied\n  } = useContext(RecipeContext);\n\n  const requestByID = async () => {\n    let response = [];\n\n    if (urlText.includes('bebidas')) {\n      response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const responseJson = await response.json();\n      await setObjDetail(responseJson.drinks);\n    }\n\n    if (urlText.includes('comidas')) {\n      response = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const responseJson = await response.json();\n      await setObjDetail(responseJson.meals);\n    }\n\n    setTimeout(() => {\n      setLoading(false);\n    }, TWO_SECONDS);\n  };\n\n  const handleCopied = () => {\n    setCopied(true);\n    setTimeout(() => {\n      setCopied(false);\n    }, TWO_SECONDS);\n  };\n\n  useEffect(() => {\n    requestByID();\n  }, []);\n\n  const renderDrink = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, `${objDetail[0].strCategory} (${objDetail[0].strAlcoholic})`), /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, objDetail[0].strDrink), /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"recipe-photo\",\n    className: \"food-image\",\n    src: objDetail[0].strDrinkThumb,\n    alt: objDetail[0].strDrink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CopyToClipboard, {\n    text: `http://localhost:3000${urlDetails[0]}`,\n    onCopy: () => {\n      handleCopied();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"image\",\n    \"data-testid\": \"share-btn\",\n    src: shareIcon,\n    alt: objDetail[0].strDrink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(LinkCopiado, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FavoriteBtn, {\n    urlText: urlText,\n    objDetail: objDetail,\n    id: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(IngredientsCheckbox, {\n    objDetail: objDetail,\n    id: id,\n    url: urlText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, objDetail[0].strInstructions), /*#__PURE__*/React.createElement(ButtonFinish, {\n    objDetail: objDetail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }));\n\n  const renderFood = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, objDetail[0].strCategory), /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, objDetail[0].strMeal), /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"recipe-photo\",\n    src: objDetail[0].strMealThumb,\n    alt: objDetail[0].strMeal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CopyToClipboard, {\n    text: `http://localhost:3000${urlDetails[0]}`,\n    onCopy: () => {\n      handleCopied();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"image\",\n    \"data-testid\": \"share-btn\",\n    src: shareIcon,\n    alt: objDetail[0].strMeal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(LinkCopiado, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FavoriteBtn, {\n    urlText: urlText,\n    objDetail: objDetail,\n    id: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(IngredientsCheckbox, {\n    objDetail: objDetail,\n    id: id,\n    url: urlText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, objDetail[0].strInstructions), /*#__PURE__*/React.createElement(ButtonFinish, {\n    objDetail: objDetail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }));\n\n  const render = () => {\n    const value = history.location.pathname;\n\n    if (value.includes('comidas')) {\n      return renderFood();\n    }\n\n    if (value.includes('bebidas')) {\n      return renderDrink();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 18\n    }\n  }) : render());\n}\n\nexport default DetalhesInProgress;","map":{"version":3,"sources":["/home/douglas/√Årea de Trabalho/Projetos em geral/App-Receitas/src/Pages/DetalhesInProgress.js"],"names":["React","useContext","useEffect","useState","useHistory","CopyToClipboard","Loading","RecipeContext","LinkCopiado","ButtonFinish","IngredientsCheckbox","FavoriteBtn","DetalhesInProgress","TWO_SECONDS","history","urlText","location","pathname","urlDetails","split","console","log","id","objDetail","setObjDetail","loading","setLoading","setCopied","requestByID","response","includes","fetch","responseJson","json","drinks","meals","setTimeout","handleCopied","renderDrink","strCategory","strAlcoholic","strDrink","strDrinkThumb","shareIcon","strInstructions","renderFood","strMeal","strMealThumb","render","value"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport '../styles/Detalhes.css';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport shareIcon from '../images/shareIcon.svg';\nimport Loading from '../components/Loading';\nimport RecipeContext from '../context/RecipeContext';\nimport LinkCopiado from '../components/LinkCopiado';\nimport ButtonFinish from '../components/ButtonFinish';\nimport IngredientsCheckbox from '../components/IngredientsCheckbox';\nimport FavoriteBtn from '../components/FavoriteBtn';\n\nfunction DetalhesInProgress() {\n  const TWO_SECONDS = 2000;\n  const history = useHistory();\n  const urlText = history.location.pathname;\n  const urlDetails = urlText.split('/in-progress');\n  console.log(urlDetails[0]);\n  const id = urlText.split('/')[2];\n  const [objDetail, setObjDetail] = useState([]);\n  const [loading, setLoading] = useState(true);\n  console.log(objDetail);\n\n  const { setCopied } = useContext(RecipeContext);\n\n  const requestByID = async () => {\n    let response = [];\n    if (urlText.includes('bebidas')) {\n      response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const responseJson = await response.json();\n      await setObjDetail(responseJson.drinks);\n    }\n    if (urlText.includes('comidas')) {\n      response = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const responseJson = await response.json();\n      await setObjDetail(responseJson.meals);\n    }\n    setTimeout(() => {\n      setLoading(false);\n    }, TWO_SECONDS);\n  };\n\n  const handleCopied = () => {\n    setCopied(true);\n    setTimeout(() => {\n      setCopied(false);\n    }, TWO_SECONDS);\n  };\n\n  useEffect(() => {\n    requestByID();\n  }, []);\n\n  const renderDrink = () => (\n    <div className=\"details\">\n      <h1\n        data-testid=\"recipe-category\"\n      >\n        {`${objDetail[0].strCategory} (${objDetail[0].strAlcoholic})`}\n      </h1>\n      <h2 data-testid=\"recipe-title\">{objDetail[0].strDrink}</h2>\n      <img\n        data-testid=\"recipe-photo\"\n        className=\"food-image\"\n        src={ objDetail[0].strDrinkThumb }\n        alt={ objDetail[0].strDrink }\n      />\n      <div className=\"icons\">\n        <CopyToClipboard\n          text={ `http://localhost:3000${urlDetails[0]}` }\n          onCopy={ () => {\n            handleCopied();\n          } }\n        >\n          <input\n            type=\"image\"\n            data-testid=\"share-btn\"\n            src={ shareIcon }\n            alt={ objDetail[0].strDrink }\n          />\n        </CopyToClipboard>\n        <LinkCopiado />\n        <FavoriteBtn urlText={ urlText } objDetail={ objDetail } id={ id } />\n      </div>\n      <IngredientsCheckbox objDetail={ objDetail } id={ id } url={ urlText } />\n      <p data-testid=\"instructions\">{objDetail[0].strInstructions}</p>\n      <ButtonFinish objDetail={ objDetail } />\n    </div>\n\n  );\n\n  const renderFood = () => (\n    <div className=\"details\">\n      <h1 data-testid=\"recipe-category\">{objDetail[0].strCategory}</h1>\n      <h2 data-testid=\"recipe-title\">{objDetail[0].strMeal}</h2>\n      <img\n        data-testid=\"recipe-photo\"\n        src={ objDetail[0].strMealThumb }\n        alt={ objDetail[0].strMeal }\n      />\n      <div className=\"icons\">\n        <CopyToClipboard\n          text={ `http://localhost:3000${urlDetails[0]}` }\n          onCopy={ () => {\n            handleCopied();\n          } }\n        >\n          <input\n            type=\"image\"\n            data-testid=\"share-btn\"\n            src={ shareIcon }\n            alt={ objDetail[0].strMeal }\n          />\n        </CopyToClipboard>\n        <LinkCopiado />\n        <FavoriteBtn urlText={ urlText } objDetail={ objDetail } id={ id } />\n      </div>\n      <IngredientsCheckbox objDetail={ objDetail } id={ id } url={ urlText } />\n      <p data-testid=\"instructions\">{objDetail[0].strInstructions}</p>\n      <ButtonFinish objDetail={ objDetail } />\n    </div>\n\n  );\n\n  const render = () => {\n    const value = history.location.pathname;\n    if (value.includes('comidas')) {\n      return renderFood();\n    }\n    if (value.includes('bebidas')) {\n      return renderDrink();\n    }\n  };\n\n  return (\n    <div>\n      {loading ? <Loading /> : render()}\n    </div>\n  );\n}\n\nexport default DetalhesInProgress;\n"]},"metadata":{},"sourceType":"module"}