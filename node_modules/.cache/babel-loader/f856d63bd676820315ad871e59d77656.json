{"ast":null,"code":"var _jsxFileName = \"/home/douglas/\\xC1rea de Trabalho/Trybe/trybe-exercises/Projetos/FrontEnd/sd-08-project-recipes-app/src/components/CardFavoritas.js\";\nimport React, { useContext } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Link } from 'react-router-dom';\nimport RecipeContext from '../context/RecipeContext';\nimport shareIcon from \"../images/shareIcon.svg\";\nimport LinkCopiado from './LinkCopiado';\nimport blackHeartIcon from \"../images/blackHeartIcon.svg\";\nimport '../styles/CardFeitas.css';\n\nfunction CardFavoritas({\n  objDetail,\n  index\n}) {\n  const {\n    setCopied,\n    receitasFav,\n    setReceitasFav\n  } = useContext(RecipeContext);\n  const TWO_SECONDS = 2000;\n\n  const handleCopied = () => {\n    setCopied(true);\n    setTimeout(() => {\n      setCopied(false);\n    }, TWO_SECONDS);\n  };\n\n  const removeFavorite = () => {\n    if (localStorage.getItem('favoriteRecipes') !== null) {\n      const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n      const updatedFavorites = favoriteRecipes.filter(elem => elem.id !== objDetail.id);\n      localStorage.setItem('favoriteRecipes', JSON.stringify(updatedFavorites));\n      setReceitasFav(JSON.parse(localStorage.getItem('favoriteRecipes')));\n    }\n  };\n\n  const render = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"done-card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/${objDetail.type}s/${objDetail.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    \"data-testid\": `${index}-horizontal-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, objDetail.name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/${objDetail.type}s/${objDetail.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: objDetail.image,\n    alt: objDetail.name,\n    \"data-testid\": `${index}-horizontal-image`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    \"data-testid\": `${index}-horizontal-top-text`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, objDetail.area, objDetail.area && ' - ', objDetail.category), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, objDetail.alcoholicOrNot)), /*#__PURE__*/React.createElement(CopyToClipboard, {\n    text: `http://localhost:3000/${objDetail.type}s/${objDetail.id}`,\n    onCopy: () => {\n      handleCopied();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"share-btn\",\n    type: \"image\",\n    \"data-testid\": `${index}-horizontal-share-btn`,\n    src: shareIcon,\n    alt: objDetail.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(LinkCopiado, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"favorite-btn\",\n    onClick: () => removeFavorite(),\n    type: \"image\",\n    \"data-testid\": \"favorite-btn\",\n    src: blackHeartIcon,\n    alt: \"foto do item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }))));\n\n  return render();\n}\n\nexport default CardFavoritas;","map":{"version":3,"sources":["/home/douglas/Área de Trabalho/Trybe/trybe-exercises/Projetos/FrontEnd/sd-08-project-recipes-app/src/components/CardFavoritas.js"],"names":["React","useContext","CopyToClipboard","Link","RecipeContext","LinkCopiado","CardFavoritas","objDetail","index","setCopied","receitasFav","setReceitasFav","TWO_SECONDS","handleCopied","setTimeout","removeFavorite","localStorage","getItem","favoriteRecipes","JSON","parse","updatedFavorites","filter","elem","id","setItem","stringify","render","type","name","image","area","category","alcoholicOrNot","shareIcon","blackHeartIcon"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Link } from 'react-router-dom';\nimport RecipeContext from '../context/RecipeContext';\nimport shareIcon from '../images/shareIcon.svg';\nimport LinkCopiado from './LinkCopiado';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\n\nimport '../styles/CardFeitas.css';\n\nfunction CardFavoritas({ objDetail, index }) {\n  const { setCopied, receitasFav, setReceitasFav } = useContext(RecipeContext);\n  const TWO_SECONDS = 2000;\n\n  const handleCopied = () => {\n    setCopied(true);\n    setTimeout(() => {\n      setCopied(false);\n    }, TWO_SECONDS);\n  };\n\n  const removeFavorite = () => {\n    if (localStorage.getItem('favoriteRecipes') !== null) {\n      const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n      const updatedFavorites = favoriteRecipes.filter((elem) => elem.id !== objDetail.id);\n      localStorage.setItem('favoriteRecipes', JSON.stringify(updatedFavorites));\n      setReceitasFav(JSON.parse(localStorage.getItem('favoriteRecipes')));\n    }\n  };\n\n  const render = () => (\n    <div className=\"done-card-body\">\n      <Link to={ `/${objDetail.type}s/${objDetail.id}` }>\n        <h1\n          data-testid={ `${index}-horizontal-name` }\n        >\n          {objDetail.name}\n        </h1>\n      </Link>\n\n      <div className=\"card-content\">\n        <Link to={ `/${objDetail.type}s/${objDetail.id}` }>\n          <img\n            src={ objDetail.image }\n            alt={ objDetail.name }\n            data-testid={ `${index}-horizontal-image` }\n          />\n        </Link>\n\n        <section>\n          <h3\n            data-testid={ `${index}-horizontal-top-text` }\n          >\n\n            <p>\n              {objDetail.area}\n              {objDetail.area && ' - '}\n              {objDetail.category}\n            </p>\n            <p>\n              {objDetail.alcoholicOrNot}\n            </p>\n\n          </h3>\n          <CopyToClipboard\n            text={ `http://localhost:3000/${objDetail.type}s/${objDetail.id}` }\n            onCopy={ () => {\n              handleCopied();\n            } }\n          >\n            <input\n              className=\"share-btn\"\n              type=\"image\"\n              data-testid={ `${index}-horizontal-share-btn` }\n              src={ shareIcon }\n              alt={ objDetail.id }\n            />\n          </CopyToClipboard>\n          <LinkCopiado />\n          <input\n            className=\"favorite-btn\"\n            onClick={ () => removeFavorite() }\n            type=\"image\"\n            data-testid=\"favorite-btn\"\n            src={ blackHeartIcon }\n            alt=\"foto do item\"\n          />\n        </section>\n      </div>\n    </div>\n  );\n\n  return render();\n}\n\nexport default CardFavoritas;\n"]},"metadata":{},"sourceType":"module"}