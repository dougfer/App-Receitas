{"ast":null,"code":"var _jsxFileName = \"/home/douglas/\\xC1rea de Trabalho/Trybe/trybe-exercises/Projetos/FrontEnd/sd-08-project-recipes-app/src/components/IngredientsCheckbox.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction IngredientsCheckbox({\n  objDetail,\n  id,\n  url\n}) {\n  const verifyIngredientsChecked = () => {\n    if (localStorage.getItem('inProgressRecipes') !== null) {\n      const inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n      if (url.includes('comida')) {\n        return inProgressRecipes.meals[id];\n      }\n\n      if (url.includes('bebida')) {\n        return inProgressRecipes.cocktails[id];\n      }\n    } else {\n      return ['textoaleatorio'];\n    }\n  };\n\n  const handleChange = ({\n    target\n  }) => {\n    const ol = target.parentNode.parentNode.parentNode;\n    const lista = ol.childNodes;\n    const listaDeIngredientes = [];\n    console.log(ol);\n    lista.forEach(elem => {\n      const checkbox = elem.firstChild.firstChild;\n\n      if (checkbox.checked) {\n        listaDeIngredientes.push(checkbox.id);\n      }\n    });\n    console.log(listaDeIngredientes);\n\n    if (localStorage.getItem('inProgressRecipes') !== null) {\n      const inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n      if (url.includes('comidas')) {\n        localStorage.setItem('inProgressRecipes', JSON.stringify({ ...inProgressRecipes,\n          meals: { ...inProgressRecipes.meals,\n            [id]: listaDeIngredientes\n          }\n        }));\n      }\n\n      if (url.includes('bebidas')) {\n        localStorage.setItem('inProgressRecipes', JSON.stringify({ ...inProgressRecipes,\n          cocktails: { ...inProgressRecipes.cocktails,\n            [id]: listaDeIngredientes\n          }\n        }));\n      }\n    } else {\n      if (url.includes('comidas')) {\n        localStorage.setItem('inProgressRecipes', JSON.stringify({\n          meals: {\n            [id]: listaDeIngredientes\n          }\n        }));\n      }\n\n      if (url.includes('bebidas')) {\n        localStorage.setItem('inProgressRecipes', JSON.stringify({\n          cocktails: {\n            [id]: listaDeIngredientes\n          }\n        }));\n      }\n    }\n\n    const SELECTED_LI = 'selected-li';\n\n    if (!target.checked) {\n      target.parentNode.classList.remove(SELECTED_LI);\n    } else {\n      target.parentNode.classList.add(SELECTED_LI);\n    }\n  };\n\n  const getIngredients = () => {\n    const ingredientes = Object.entries(objDetail[0]);\n    const measure = ingredientes.filter(elem => elem[0].includes('strMeasure') && elem[1] !== null && elem[1] !== '');\n    const filtering = ingredientes.filter(element => element[0].includes('strIngredient') && element[1] !== null && element[1] !== '');\n    const results = filtering.map((elem, index) => {\n      const isChecked = verifyIngredientsChecked().some(e => e === elem[1]);\n      return /*#__PURE__*/React.createElement(\"li\", {\n        name: \"li-ingredients\",\n        key: elem[1],\n        \"data-testid\": `${index}-ingredient-step`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: elem[1],\n        className: isChecked ? 'selected-li' : '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        defaultChecked: isChecked,\n        onChange: handleChange,\n        type: \"checkbox\",\n        id: elem[1],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }\n      }), elem[1], /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }\n      }, measure[index] === undefined ? '' : measure[index][1])));\n    });\n    return results;\n  };\n\n  return /*#__PURE__*/React.createElement(\"ol\", {\n    className: \"ingredient-list\",\n    id: \"ingredient-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, getIngredients());\n}\n\nIngredientsCheckbox.propTypes = {\n  id: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  objDetail: PropTypes.shape(PropTypes.any).isRequired\n};\nexport default IngredientsCheckbox;","map":{"version":3,"sources":["/home/douglas/Área de Trabalho/Trybe/trybe-exercises/Projetos/FrontEnd/sd-08-project-recipes-app/src/components/IngredientsCheckbox.js"],"names":["React","PropTypes","IngredientsCheckbox","objDetail","id","url","verifyIngredientsChecked","localStorage","getItem","inProgressRecipes","JSON","parse","includes","meals","cocktails","handleChange","target","ol","parentNode","lista","childNodes","listaDeIngredientes","console","log","forEach","elem","checkbox","firstChild","checked","push","setItem","stringify","SELECTED_LI","classList","remove","add","getIngredients","ingredientes","Object","entries","measure","filter","filtering","element","results","map","index","isChecked","some","e","undefined","propTypes","string","isRequired","shape","any"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction IngredientsCheckbox({ objDetail, id, url }) {\n  const verifyIngredientsChecked = () => {\n    if (localStorage.getItem('inProgressRecipes') !== null) {\n      const inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n      if (url.includes('comida')) {\n        return inProgressRecipes.meals[id];\n      }\n      if (url.includes('bebida')) {\n        return inProgressRecipes.cocktails[id];\n      }\n    } else { return ['textoaleatorio']; }\n  };\n\n  const handleChange = ({ target }) => {\n    const ol = target.parentNode.parentNode.parentNode;\n    const lista = ol.childNodes;\n    const listaDeIngredientes = [];\n    console.log(ol);\n\n    lista.forEach((elem) => {\n      const checkbox = elem.firstChild.firstChild;\n      if (checkbox.checked) {\n        listaDeIngredientes.push(checkbox.id);\n      }\n    });\n\n    console.log(listaDeIngredientes);\n    if (localStorage.getItem('inProgressRecipes') !== null) {\n      const inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n      if (url.includes('comidas')) {\n        localStorage.setItem('inProgressRecipes', JSON.stringify({\n          ...inProgressRecipes,\n          meals: {\n            ...inProgressRecipes.meals,\n            [id]: listaDeIngredientes,\n          },\n        }));\n      }\n      if (url.includes('bebidas')) {\n        localStorage.setItem('inProgressRecipes', JSON.stringify({\n          ...inProgressRecipes,\n          cocktails: {\n            ...inProgressRecipes.cocktails,\n            [id]: listaDeIngredientes,\n          },\n        }));\n      }\n    } else {\n      if (url.includes('comidas')) {\n        localStorage.setItem(\n          'inProgressRecipes', JSON.stringify({ meals: { [id]: listaDeIngredientes } }),\n        );\n      }\n      if (url.includes('bebidas')) {\n        localStorage.setItem('inProgressRecipes', JSON.stringify(\n          { cocktails: { [id]: listaDeIngredientes } },\n        ));\n      }\n    }\n    const SELECTED_LI = 'selected-li';\n    if (!target.checked) {\n      target.parentNode.classList.remove(SELECTED_LI);\n    } else { target.parentNode.classList.add(SELECTED_LI); }\n  };\n  const getIngredients = () => {\n    const ingredientes = Object.entries(objDetail[0]);\n\n    const measure = ingredientes.filter((elem) => (\n      elem[0].includes('strMeasure') && elem[1] !== null && elem[1] !== ''\n    ));\n    const filtering = ingredientes.filter((element) => (\n      element[0].includes('strIngredient') && element[1] !== null && element[1] !== ''));\n\n    const results = filtering.map((elem, index) => {\n      const isChecked = verifyIngredientsChecked().some((e) => e === elem[1]);\n      return (\n        <li\n          name=\"li-ingredients\"\n          key={ elem[1] }\n          data-testid={ `${index}-ingredient-step` }\n        >\n          <label\n            htmlFor={ elem[1] }\n            className={ isChecked ? 'selected-li' : '' }\n          >\n            <input\n              defaultChecked={ isChecked }\n              onChange={ handleChange }\n              type=\"checkbox\"\n              id={ elem[1] }\n            />\n            {elem[1]}\n            <span>{measure[index] === undefined ? '' : measure[index][1]}</span>\n          </label>\n        </li>);\n    });\n\n    return results;\n  };\n\n  return (\n    <ol\n      className=\"ingredient-list\"\n      id=\"ingredient-list\"\n    >\n      {getIngredients()}\n    </ol>\n  );\n}\n\nIngredientsCheckbox.propTypes = {\n  id: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  objDetail: PropTypes.shape(\n    PropTypes.any,\n  ).isRequired,\n};\n\nexport default IngredientsCheckbox;\n"]},"metadata":{},"sourceType":"module"}