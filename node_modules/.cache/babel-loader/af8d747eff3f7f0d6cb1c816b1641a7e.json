{"ast":null,"code":"var _jsxFileName = \"/home/douglas/\\xC1rea de Trabalho/Trybe/trybe-exercises/Projetos/FrontEnd/sd-08-project-recipes-app/src/components/ButtonIniciar.js\";\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport RecipeContext from '../context/RecipeContext';\n\nfunction ButtonIniciar({\n  id,\n  objDetail\n}) {\n  const {\n    startedRecipes\n  } = useContext(RecipeContext);\n  const history = useHistory();\n\n  const Ingredients = () => {\n    const ingredientes = Object.entries(objDetail[0]);\n    const filtering = ingredientes.filter(element => element[0].includes('strIngredient') && element[1] !== null && element[1] !== '');\n    const results = filtering.map(elem => elem[1]);\n    return results;\n  };\n\n  const value = history.location.pathname;\n\n  const setLocalStoragesIngredients = () => {\n    if (localStorage.getItem('inProgressRecipes') !== undefined) {\n      const sem = localStorage.getItem('inProgressRecipes');\n      const inProgress = JSON.parse(sem);\n\n      if (value.includes('comidas')) {\n        localStorage.setItem('inProgressRecipes', JSON.stringify({ ...inProgress,\n          meals: { ...inProgress.meals,\n            [id]: Ingredients()\n          }\n        }));\n      }\n\n      if (value.includes('bebidas')) {\n        localStorage.setItem('inProgressRecipes', JSON.stringify({ ...inProgress,\n          cocktails: { ...inProgress.cocktails,\n            [id]: Ingredients()\n          }\n        }));\n      }\n    }\n  };\n\n  const verifyId = id => {\n    const inProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const entries = Object.entries(inProgress);\n    const newArray = [...Object.keys(inProgress.meals), ...Object.keys(inProgress.cocktails)];\n    console.log(newArray); // return entries.forEach((elem) => {\n    //   return Object.entries(elem).forEach((e) => e);\n    // });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, verifyId('52978'), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"start-recipe-btn\",\n    type: \"button\",\n    \"data-testid\": \"start-recipe-btn\",\n    onClick: setLocalStoragesIngredients,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, startedRecipes.some(elem => elem === id) ? 'Continuar Receita' : 'Iniciar Receita'));\n}\n\nButtonIniciar.propTypes = {\n  id: PropTypes.string.isRequired,\n  objDetail: PropTypes.shape(PropTypes.any).isRequired\n};\nexport default ButtonIniciar;","map":{"version":3,"sources":["/home/douglas/Área de Trabalho/Trybe/trybe-exercises/Projetos/FrontEnd/sd-08-project-recipes-app/src/components/ButtonIniciar.js"],"names":["React","useContext","PropTypes","useHistory","RecipeContext","ButtonIniciar","id","objDetail","startedRecipes","history","Ingredients","ingredientes","Object","entries","filtering","filter","element","includes","results","map","elem","value","location","pathname","setLocalStoragesIngredients","localStorage","getItem","undefined","sem","inProgress","JSON","parse","setItem","stringify","meals","cocktails","verifyId","newArray","keys","console","log","some","propTypes","string","isRequired","shape","any"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport RecipeContext from '../context/RecipeContext';\n\nfunction ButtonIniciar({ id, objDetail }) {\n  const { startedRecipes } = useContext(RecipeContext);\n  const history = useHistory();\n\n  const Ingredients = () => {\n    const ingredientes = Object.entries(objDetail[0]);\n\n    const filtering = ingredientes.filter((element) => (\n      element[0].includes('strIngredient') && element[1] !== null && element[1] !== ''));\n\n    const results = filtering.map((elem) => elem[1]);\n    return results;\n  };\n\n  const value = history.location.pathname;\n\n  const setLocalStoragesIngredients = () => {\n    if (localStorage.getItem('inProgressRecipes') !== undefined ) {\n      const sem = localStorage.getItem('inProgressRecipes');\n      const inProgress = JSON.parse(sem);\n      if (value.includes('comidas')) {\n        localStorage.setItem('inProgressRecipes', JSON.stringify({\n          ...inProgress,\n          meals: {\n            ...inProgress.meals,\n            [id]: Ingredients(),\n          },\n        }));\n      }\n      if (value.includes('bebidas')) {\n        localStorage.setItem('inProgressRecipes', JSON.stringify({\n          ...inProgress,\n          cocktails: {\n            ...inProgress.cocktails,\n            [id]: Ingredients(),\n          },\n        }));\n      }\n    }\n  };\n\n  const verifyId = (id) => {\n    const inProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const entries = Object.entries((inProgress));\n    const newArray = [\n      ...Object.keys(inProgress.meals),\n      ...Object.keys(inProgress.cocktails),\n    ];\n    console.log(newArray)\n    // return entries.forEach((elem) => {\n    //   return Object.entries(elem).forEach((e) => e);\n    // });\n  };\n\n  return (\n    <div>\n      {(verifyId('52978'))}\n      <button\n        className=\"start-recipe-btn\"\n        type=\"button\"\n        data-testid=\"start-recipe-btn\"\n        onClick={ setLocalStoragesIngredients }\n      >\n        {startedRecipes.some((elem) => elem === id)\n          ? 'Continuar Receita' : 'Iniciar Receita' }\n      </button>\n    </div>\n  );\n}\n\nButtonIniciar.propTypes = {\n  id: PropTypes.string.isRequired,\n  objDetail: PropTypes.shape(\n    PropTypes.any,\n  ).isRequired,\n};\n\nexport default ButtonIniciar;\n"]},"metadata":{},"sourceType":"module"}