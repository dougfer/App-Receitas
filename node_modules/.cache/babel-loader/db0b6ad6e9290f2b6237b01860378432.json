{"ast":null,"code":"const MAX_MONTH = 10;\n\nconst getCurrentDate = () => {\n  const newDate = new Date();\n  const date = newDate.getDate();\n  const month = newDate.getMonth() + 1;\n  const year = newDate.getFullYear();\n  return `${year}/${month < MAX_MONTH ? `0${month}` : `${month}`}/${date}`;\n};\n\nconst setDoneFood = recipeObject => {\n  console.log('entrou no if comidas');\n  const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n  const allKeys = Object.keys(recipeObject);\n  const objeto = {\n    id: recipeObject.idMeal,\n    type: 'comida',\n    area: allKeys.some(elem => elem === 'strArea') ? recipeObject.strArea : '',\n    category: allKeys.some(elem => elem === 'strCategory') ? recipeObject.strCategory : '',\n    alcoholicOrNot: allKeys.some(elem => elem === 'strAlcoholic') ? recipeObject.strAlcoholic : '',\n    name: recipeObject.strMeal,\n    image: recipeObject.strMealThumb,\n    doneDate: getCurrentDate(),\n    tags: recipeObject.strTags !== null ? recipeObject.strTags.split(',').map(elem => elem) : []\n  };\n  const updateDone = [...doneRecipes, objeto];\n  localStorage.setItem('doneRecipes', JSON.stringify(updateDone));\n};\n\nconst setDoneFoodElse = recipeObject => {\n  console.log('entrou no if comidas');\n  const allKeys = Object.keys(recipeObject);\n  const objeto = {\n    id: recipeObject.idMeal,\n    type: 'comida',\n    area: allKeys.some(elem => elem === 'strArea') ? recipeObject.strArea : '',\n    category: allKeys.some(elem => elem === 'strCategory') ? recipeObject.strCategory : '',\n    alcoholicOrNot: allKeys.some(elem => elem === 'strAlcoholic') ? recipeObject.strAlcoholic : '',\n    name: recipeObject.strMeal,\n    image: recipeObject.strMealThumb,\n    doneDate: getCurrentDate(),\n    tags: recipeObject.strTags !== null ? recipeObject.strTags.split(',').map(elem => elem) : []\n  };\n  const updateFav = [objeto];\n  localStorage.setItem('doneRecipes', JSON.stringify(updateFav));\n};\n\nconst setDoneDrink = recipeObject => {\n  console.log('entrou no if Bebidas');\n  const favoriteRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n  const allKeys = Object.keys(recipeObject);\n  const objeto = {\n    id: recipeObject.idDrink,\n    type: 'bebida',\n    area: allKeys.some(elem => elem === 'strArea') ? recipeObject.strArea : '',\n    category: allKeys.some(elem => elem === 'strCategory') ? recipeObject.strCategory : '',\n    alcoholicOrNot: allKeys.some(elem => elem === 'strAlcoholic') ? recipeObject.strAlcoholic : '',\n    name: recipeObject.strDrink,\n    image: recipeObject.strDrinkThumb,\n    doneDate: getCurrentDate(),\n    tags: ''\n  };\n  const updateFav = [...favoriteRecipes, objeto];\n  localStorage.setItem('doneRecipes', JSON.stringify(updateFav));\n};\n\nconst setDoneDrinkElse = recipeObject => {\n  console.log('entrou no if bebidas');\n  const allKeys = Object.keys(recipeObject);\n  const objeto = {\n    id: recipeObject.idDrink,\n    type: 'bebida',\n    area: allKeys.some(elem => elem === 'strArea') ? recipeObject.strArea : '',\n    category: allKeys.some(elem => elem === 'strCategory') ? recipeObject.strCategory : '',\n    alcoholicOrNot: allKeys.some(elem => elem === 'strAlcoholic') ? recipeObject.strAlcoholic : '',\n    name: recipeObject.strDrink,\n    image: recipeObject.strDrinkThumb,\n    doneDate: getCurrentDate(),\n    tags: ''\n  };\n  const updateFav = [objeto];\n  localStorage.setItem('doneRecipes', JSON.stringify(updateFav));\n};\n\nconst setDoneRecipes = (recipeObject, url) => {\n  console.log('inicio');\n\n  if (localStorage.getItem('doneRecipes') !== null) {\n    console.log('entrou no if');\n\n    if (url.includes('comidas')) {\n      setDoneFood(recipeObject);\n    }\n\n    if (url.includes('bebidas')) {\n      setDoneDrink(recipeObject);\n    }\n  } else {\n    if (url.includes('comidas')) {\n      setDoneFoodElse(recipeObject);\n    }\n\n    if (url.includes('bebidas')) {\n      setDoneDrinkElse(recipeObject);\n    }\n  }\n};\n\nexport default setDoneRecipes;","map":{"version":3,"sources":["/home/douglas/Área de Trabalho/Trybe/trybe-exercises/Projetos/FrontEnd/sd-08-project-recipes-app/src/services/setDoneRecipes.js"],"names":["MAX_MONTH","getCurrentDate","newDate","Date","date","getDate","month","getMonth","year","getFullYear","setDoneFood","recipeObject","console","log","doneRecipes","JSON","parse","localStorage","getItem","allKeys","Object","keys","objeto","id","idMeal","type","area","some","elem","strArea","category","strCategory","alcoholicOrNot","strAlcoholic","name","strMeal","image","strMealThumb","doneDate","tags","strTags","split","map","updateDone","setItem","stringify","setDoneFoodElse","updateFav","setDoneDrink","favoriteRecipes","idDrink","strDrink","strDrinkThumb","setDoneDrinkElse","setDoneRecipes","url","includes"],"mappings":"AAAA,MAAMA,SAAS,GAAG,EAAlB;;AACA,MAAMC,cAAc,GAAG,MAAM;AAC3B,QAAMC,OAAO,GAAG,IAAIC,IAAJ,EAAhB;AACA,QAAMC,IAAI,GAAGF,OAAO,CAACG,OAAR,EAAb;AACA,QAAMC,KAAK,GAAGJ,OAAO,CAACK,QAAR,KAAqB,CAAnC;AACA,QAAMC,IAAI,GAAGN,OAAO,CAACO,WAAR,EAAb;AAEA,SACG,GAAED,IAAK,IAAGF,KAAK,GAAGN,SAAR,GACN,IAAGM,KAAM,EADH,GACQ,GAAEA,KAAM,EAAE,IAAGF,IAAK,EAFvC;AAGD,CATD;;AAWA,MAAMM,WAAW,GAAIC,YAAD,IAAkB;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,QAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAApB;AAEA,QAAMC,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYV,YAAZ,CAAhB;AAEA,QAAMW,MAAM,GAAG;AACbC,IAAAA,EAAE,EAAEZ,YAAY,CAACa,MADJ;AAEbC,IAAAA,IAAI,EAAE,QAFO;AAGbC,IAAAA,IAAI,EAAEP,OAAO,CAACQ,IAAR,CACHC,IAAD,IAAUA,IAAI,KAAK,SADf,IAEFjB,YAAY,CAACkB,OAFX,GAEqB,EALd;AAMbC,IAAAA,QAAQ,EAAEX,OAAO,CAACQ,IAAR,CACPC,IAAD,IAAUA,IAAI,KAAK,aADX,IAENjB,YAAY,CAACoB,WAFP,GAEqB,EARlB;AASbC,IAAAA,cAAc,EAAEb,OAAO,CAACQ,IAAR,CACbC,IAAD,IAAUA,IAAI,KAAK,cADL,IAEZjB,YAAY,CAACsB,YAFD,GAEgB,EAXnB;AAYbC,IAAAA,IAAI,EAAEvB,YAAY,CAACwB,OAZN;AAabC,IAAAA,KAAK,EAAEzB,YAAY,CAAC0B,YAbP;AAcbC,IAAAA,QAAQ,EAAErC,cAAc,EAdX;AAebsC,IAAAA,IAAI,EAAE5B,YAAY,CAAC6B,OAAb,KAAyB,IAAzB,GACF7B,YAAY,CAAC6B,OAAb,CAAqBC,KAArB,CAA2B,GAA3B,EAAgCC,GAAhC,CAAqCd,IAAD,IAAUA,IAA9C,CADE,GAEF;AAjBS,GAAf;AAoBA,QAAMe,UAAU,GAAG,CACjB,GAAG7B,WADc,EAEjBQ,MAFiB,CAAnB;AAKAL,EAAAA,YAAY,CAAC2B,OAAb,CAAqB,aAArB,EAAoC7B,IAAI,CAAC8B,SAAL,CAAeF,UAAf,CAApC;AACD,CAhCD;;AAkCA,MAAMG,eAAe,GAAInC,YAAD,IAAkB;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AAEA,QAAMM,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYV,YAAZ,CAAhB;AAEA,QAAMW,MAAM,GAAG;AACbC,IAAAA,EAAE,EAAEZ,YAAY,CAACa,MADJ;AAEbC,IAAAA,IAAI,EAAE,QAFO;AAGbC,IAAAA,IAAI,EAAEP,OAAO,CAACQ,IAAR,CACHC,IAAD,IAAUA,IAAI,KAAK,SADf,IAEFjB,YAAY,CAACkB,OAFX,GAEqB,EALd;AAMbC,IAAAA,QAAQ,EAAEX,OAAO,CAACQ,IAAR,CACPC,IAAD,IAAUA,IAAI,KAAK,aADX,IAENjB,YAAY,CAACoB,WAFP,GAEqB,EARlB;AASbC,IAAAA,cAAc,EAAEb,OAAO,CAACQ,IAAR,CACbC,IAAD,IAAUA,IAAI,KAAK,cADL,IAEZjB,YAAY,CAACsB,YAFD,GAEgB,EAXnB;AAYbC,IAAAA,IAAI,EAAEvB,YAAY,CAACwB,OAZN;AAabC,IAAAA,KAAK,EAAEzB,YAAY,CAAC0B,YAbP;AAcbC,IAAAA,QAAQ,EAAErC,cAAc,EAdX;AAebsC,IAAAA,IAAI,EAAE5B,YAAY,CAAC6B,OAAb,KAAyB,IAAzB,GACF7B,YAAY,CAAC6B,OAAb,CAAqBC,KAArB,CAA2B,GAA3B,EAAgCC,GAAhC,CAAqCd,IAAD,IAAUA,IAA9C,CADE,GAEF;AAjBS,GAAf;AAoBA,QAAMmB,SAAS,GAAG,CAChBzB,MADgB,CAAlB;AAIAL,EAAAA,YAAY,CAAC2B,OAAb,CAAqB,aAArB,EAAoC7B,IAAI,CAAC8B,SAAL,CAAeE,SAAf,CAApC;AACD,CA9BD;;AAgCA,MAAMC,YAAY,GAAIrC,YAAD,IAAkB;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,QAAMoC,eAAe,GAAGlC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAAxB;AAEA,QAAMC,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYV,YAAZ,CAAhB;AAEA,QAAMW,MAAM,GAAG;AACbC,IAAAA,EAAE,EAAEZ,YAAY,CAACuC,OADJ;AAEbzB,IAAAA,IAAI,EAAE,QAFO;AAGbC,IAAAA,IAAI,EAAEP,OAAO,CAACQ,IAAR,CACHC,IAAD,IAAUA,IAAI,KAAK,SADf,IAEFjB,YAAY,CAACkB,OAFX,GAEqB,EALd;AAMbC,IAAAA,QAAQ,EAAEX,OAAO,CAACQ,IAAR,CACPC,IAAD,IAAUA,IAAI,KAAK,aADX,IAENjB,YAAY,CAACoB,WAFP,GAEqB,EARlB;AASbC,IAAAA,cAAc,EAAEb,OAAO,CAACQ,IAAR,CACbC,IAAD,IAAUA,IAAI,KAAK,cADL,IAEZjB,YAAY,CAACsB,YAFD,GAEgB,EAXnB;AAYbC,IAAAA,IAAI,EAAEvB,YAAY,CAACwC,QAZN;AAabf,IAAAA,KAAK,EAAEzB,YAAY,CAACyC,aAbP;AAcbd,IAAAA,QAAQ,EAAErC,cAAc,EAdX;AAebsC,IAAAA,IAAI,EAAE;AAfO,GAAf;AAkBA,QAAMQ,SAAS,GAAG,CAChB,GAAGE,eADa,EAEhB3B,MAFgB,CAAlB;AAKAL,EAAAA,YAAY,CAAC2B,OAAb,CAAqB,aAArB,EAAoC7B,IAAI,CAAC8B,SAAL,CAAeE,SAAf,CAApC;AACD,CA9BD;;AAgCA,MAAMM,gBAAgB,GAAI1C,YAAD,IAAkB;AACzCC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AAEA,QAAMM,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYV,YAAZ,CAAhB;AAEA,QAAMW,MAAM,GAAG;AACbC,IAAAA,EAAE,EAAEZ,YAAY,CAACuC,OADJ;AAEbzB,IAAAA,IAAI,EAAE,QAFO;AAGbC,IAAAA,IAAI,EAAEP,OAAO,CAACQ,IAAR,CACHC,IAAD,IAAUA,IAAI,KAAK,SADf,IAEFjB,YAAY,CAACkB,OAFX,GAEqB,EALd;AAMbC,IAAAA,QAAQ,EAAEX,OAAO,CAACQ,IAAR,CACPC,IAAD,IAAUA,IAAI,KAAK,aADX,IAENjB,YAAY,CAACoB,WAFP,GAEqB,EARlB;AASbC,IAAAA,cAAc,EAAEb,OAAO,CAACQ,IAAR,CACbC,IAAD,IAAUA,IAAI,KAAK,cADL,IAEZjB,YAAY,CAACsB,YAFD,GAEgB,EAXnB;AAYbC,IAAAA,IAAI,EAAEvB,YAAY,CAACwC,QAZN;AAabf,IAAAA,KAAK,EAAEzB,YAAY,CAACyC,aAbP;AAcbd,IAAAA,QAAQ,EAAErC,cAAc,EAdX;AAebsC,IAAAA,IAAI,EAAE;AAfO,GAAf;AAkBA,QAAMQ,SAAS,GAAG,CAChBzB,MADgB,CAAlB;AAIAL,EAAAA,YAAY,CAAC2B,OAAb,CAAqB,aAArB,EAAoC7B,IAAI,CAAC8B,SAAL,CAAeE,SAAf,CAApC;AACD,CA5BD;;AA8BA,MAAMO,cAAc,GAAG,CAAC3C,YAAD,EAAe4C,GAAf,KAAuB;AAC5C3C,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;AACA,MAAII,YAAY,CAACC,OAAb,CAAqB,aAArB,MAAwC,IAA5C,EAAkD;AAChDN,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;;AAEA,QAAI0C,GAAG,CAACC,QAAJ,CAAa,SAAb,CAAJ,EAA6B;AAC3B9C,MAAAA,WAAW,CAACC,YAAD,CAAX;AACD;;AACD,QAAI4C,GAAG,CAACC,QAAJ,CAAa,SAAb,CAAJ,EAA6B;AAC3BR,MAAAA,YAAY,CAACrC,YAAD,CAAZ;AACD;AACF,GATD,MASO;AACL,QAAI4C,GAAG,CAACC,QAAJ,CAAa,SAAb,CAAJ,EAA6B;AAC3BV,MAAAA,eAAe,CAACnC,YAAD,CAAf;AACD;;AACD,QAAI4C,GAAG,CAACC,QAAJ,CAAa,SAAb,CAAJ,EAA6B;AAC3BH,MAAAA,gBAAgB,CAAC1C,YAAD,CAAhB;AACD;AACF;AACF,CAnBD;;AAqBA,eAAe2C,cAAf","sourcesContent":["const MAX_MONTH = 10;\nconst getCurrentDate = () => {\n  const newDate = new Date();\n  const date = newDate.getDate();\n  const month = newDate.getMonth() + 1;\n  const year = newDate.getFullYear();\n\n  return (\n    `${year}/${month < MAX_MONTH\n      ? `0${month}` : `${month}`}/${date}`);\n};\n\nconst setDoneFood = (recipeObject) => {\n  console.log('entrou no if comidas');\n  const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n\n  const allKeys = Object.keys(recipeObject);\n\n  const objeto = {\n    id: recipeObject.idMeal,\n    type: 'comida',\n    area: allKeys.some(\n      (elem) => elem === 'strArea',\n    ) ? recipeObject.strArea : '',\n    category: allKeys.some(\n      (elem) => elem === 'strCategory',\n    ) ? recipeObject.strCategory : '',\n    alcoholicOrNot: allKeys.some(\n      (elem) => elem === 'strAlcoholic',\n    ) ? recipeObject.strAlcoholic : '',\n    name: recipeObject.strMeal,\n    image: recipeObject.strMealThumb,\n    doneDate: getCurrentDate(),\n    tags: recipeObject.strTags !== null\n      ? recipeObject.strTags.split(',').map((elem) => elem)\n      : [],\n  };\n\n  const updateDone = [\n    ...doneRecipes,\n    objeto,\n  ];\n\n  localStorage.setItem('doneRecipes', JSON.stringify(updateDone));\n};\n\nconst setDoneFoodElse = (recipeObject) => {\n  console.log('entrou no if comidas');\n\n  const allKeys = Object.keys(recipeObject);\n\n  const objeto = {\n    id: recipeObject.idMeal,\n    type: 'comida',\n    area: allKeys.some(\n      (elem) => elem === 'strArea',\n    ) ? recipeObject.strArea : '',\n    category: allKeys.some(\n      (elem) => elem === 'strCategory',\n    ) ? recipeObject.strCategory : '',\n    alcoholicOrNot: allKeys.some(\n      (elem) => elem === 'strAlcoholic',\n    ) ? recipeObject.strAlcoholic : '',\n    name: recipeObject.strMeal,\n    image: recipeObject.strMealThumb,\n    doneDate: getCurrentDate(),\n    tags: recipeObject.strTags !== null\n      ? recipeObject.strTags.split(',').map((elem) => elem)\n      : [],\n  };\n\n  const updateFav = [\n    objeto,\n  ];\n\n  localStorage.setItem('doneRecipes', JSON.stringify(updateFav));\n};\n\nconst setDoneDrink = (recipeObject) => {\n  console.log('entrou no if Bebidas');\n  const favoriteRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n\n  const allKeys = Object.keys(recipeObject);\n\n  const objeto = {\n    id: recipeObject.idDrink,\n    type: 'bebida',\n    area: allKeys.some(\n      (elem) => elem === 'strArea',\n    ) ? recipeObject.strArea : '',\n    category: allKeys.some(\n      (elem) => elem === 'strCategory',\n    ) ? recipeObject.strCategory : '',\n    alcoholicOrNot: allKeys.some(\n      (elem) => elem === 'strAlcoholic',\n    ) ? recipeObject.strAlcoholic : '',\n    name: recipeObject.strDrink,\n    image: recipeObject.strDrinkThumb,\n    doneDate: getCurrentDate(),\n    tags: '',\n  };\n\n  const updateFav = [\n    ...favoriteRecipes,\n    objeto,\n  ];\n\n  localStorage.setItem('doneRecipes', JSON.stringify(updateFav));\n};\n\nconst setDoneDrinkElse = (recipeObject) => {\n  console.log('entrou no if bebidas');\n\n  const allKeys = Object.keys(recipeObject);\n\n  const objeto = {\n    id: recipeObject.idDrink,\n    type: 'bebida',\n    area: allKeys.some(\n      (elem) => elem === 'strArea',\n    ) ? recipeObject.strArea : '',\n    category: allKeys.some(\n      (elem) => elem === 'strCategory',\n    ) ? recipeObject.strCategory : '',\n    alcoholicOrNot: allKeys.some(\n      (elem) => elem === 'strAlcoholic',\n    ) ? recipeObject.strAlcoholic : '',\n    name: recipeObject.strDrink,\n    image: recipeObject.strDrinkThumb,\n    doneDate: getCurrentDate(),\n    tags: '',\n  };\n\n  const updateFav = [\n    objeto,\n  ];\n\n  localStorage.setItem('doneRecipes', JSON.stringify(updateFav));\n};\n\nconst setDoneRecipes = (recipeObject, url) => {\n  console.log('inicio');\n  if (localStorage.getItem('doneRecipes') !== null) {\n    console.log('entrou no if');\n\n    if (url.includes('comidas')) {\n      setDoneFood(recipeObject);\n    }\n    if (url.includes('bebidas')) {\n      setDoneDrink(recipeObject);\n    }\n  } else {\n    if (url.includes('comidas')) {\n      setDoneFoodElse(recipeObject);\n    }\n    if (url.includes('bebidas')) {\n      setDoneDrinkElse(recipeObject);\n    }\n  }\n};\n\nexport default setDoneRecipes;\n"]},"metadata":{},"sourceType":"module"}