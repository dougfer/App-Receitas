{"ast":null,"code":"var _jsxFileName = \"/home/douglas/\\xC1rea de Trabalho/Trybe/trybe-exercises/Projetos/FrontEnd/sd-08-project-recipes-app/src/context/Provider.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipeContext from './RecipeContext';\n\nfunction Provider({\n  children\n}) {\n  //   const [meals, setMeals] = useState({});\n  //\n  const [searchType, setSearchType] = useState('ingrediente');\n  const [searchInputValue, setSearchInputValue] = useState('');\n\n  const searchBarRequest = async (type, inputvalue) => {\n    let response = '';\n\n    if (type === 'ingrediente') {\n      response = await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?i=${inputvalue}`);\n    }\n\n    if (type === 'nome') {\n      response = await fetch(`https://www.themealdb.com/api/json/v1/1/search.php?s=${inputvalue}`);\n    }\n\n    if (type === 'primeira letra') {\n      if (inputvalue.length !== 1) {\n        return alert('Sua busca deve conter somente 1 (um) caracter');\n      }\n\n      response = await fetch(`https://www.themealdb.com/api/json/v1/1/search.php?f=${inputvalue}`);\n    }\n\n    const responseJson = await response.json();\n    console.log(responseJson);\n    return responseJson;\n  };\n\n  const context = {\n    setSearchType,\n    searchType,\n    setSearchInputValue,\n    searchInputValue,\n    searchBarRequest\n  };\n  return /*#__PURE__*/React.createElement(RecipeContext.Provider, {\n    value: context,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nProvider.propTypes = {\n  children: PropTypes.objectOf(PropTypes.any).isRequired\n};\nexport default Provider;","map":{"version":3,"sources":["/home/douglas/Área de Trabalho/Trybe/trybe-exercises/Projetos/FrontEnd/sd-08-project-recipes-app/src/context/Provider.js"],"names":["React","useState","PropTypes","RecipeContext","Provider","children","searchType","setSearchType","searchInputValue","setSearchInputValue","searchBarRequest","type","inputvalue","response","fetch","length","alert","responseJson","json","console","log","context","propTypes","objectOf","any","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAAgC;AAChC;AACA;AAEE,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,aAAD,CAA5C;AACA,QAAM,CAACO,gBAAD,EAAmBC,mBAAnB,IAA0CR,QAAQ,CAAC,EAAD,CAAxD;;AAEA,QAAMS,gBAAgB,GAAG,OAAOC,IAAP,EAAaC,UAAb,KAA4B;AACnD,QAAIC,QAAQ,GAAG,EAAf;;AACA,QAAIF,IAAI,KAAK,aAAb,EAA4B;AAC1BE,MAAAA,QAAQ,GAAG,MAAMC,KAAK,CAAE,wDAAuDF,UAAW,EAApE,CAAtB;AACD;;AACD,QAAID,IAAI,KAAK,MAAb,EAAqB;AACnBE,MAAAA,QAAQ,GAAG,MAAMC,KAAK,CAAE,wDAAuDF,UAAW,EAApE,CAAtB;AACD;;AACD,QAAID,IAAI,KAAK,gBAAb,EAA+B;AAC7B,UAAIC,UAAU,CAACG,MAAX,KAAsB,CAA1B,EAA6B;AAC3B,eAAOC,KAAK,CAAC,+CAAD,CAAZ;AACD;;AACDH,MAAAA,QAAQ,GAAG,MAAMC,KAAK,CAAE,wDAAuDF,UAAW,EAApE,CAAtB;AACD;;AACD,UAAMK,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAA3B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;AACA,WAAOA,YAAP;AACD,GAjBD;;AAmBA,QAAMI,OAAO,GAAG;AACdd,IAAAA,aADc;AAEdD,IAAAA,UAFc;AAGdG,IAAAA,mBAHc;AAIdD,IAAAA,gBAJc;AAKdE,IAAAA;AALc,GAAhB;AAQA,sBACE,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAGW,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,QADH,CADF;AAKD;;AAEDD,QAAQ,CAACkB,SAAT,GAAqB;AACnBjB,EAAAA,QAAQ,EAAEH,SAAS,CAACqB,QAAV,CAAmBrB,SAAS,CAACsB,GAA7B,EAAkCC;AADzB,CAArB;AAIA,eAAerB,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipeContext from './RecipeContext';\n\nfunction Provider({ children }) {\n//   const [meals, setMeals] = useState({});\n//\n\n  const [searchType, setSearchType] = useState('ingrediente');\n  const [searchInputValue, setSearchInputValue] = useState('');\n\n  const searchBarRequest = async (type, inputvalue) => {\n    let response = '';\n    if (type === 'ingrediente') {\n      response = await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?i=${inputvalue}`);\n    }\n    if (type === 'nome') {\n      response = await fetch(`https://www.themealdb.com/api/json/v1/1/search.php?s=${inputvalue}`);\n    }\n    if (type === 'primeira letra') {\n      if (inputvalue.length !== 1) {\n        return alert('Sua busca deve conter somente 1 (um) caracter');\n      }\n      response = await fetch(`https://www.themealdb.com/api/json/v1/1/search.php?f=${inputvalue}`);\n    }\n    const responseJson = await response.json();\n    console.log(responseJson);\n    return responseJson;\n  };\n\n  const context = {\n    setSearchType,\n    searchType,\n    setSearchInputValue,\n    searchInputValue,\n    searchBarRequest,\n  };\n\n  return (\n    <RecipeContext.Provider value={ context }>\n      {children}\n    </RecipeContext.Provider>\n  );\n}\n\nProvider.propTypes = {\n  children: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default Provider;\n"]},"metadata":{},"sourceType":"module"}