{"ast":null,"code":"var _jsxFileName = \"/home/douglas/\\xC1rea de Trabalho/Trybe/trybe-exercises/Projetos/FrontEnd/sd-08-project-recipes-app/src/components/FavoriteBtn.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport whiteHeartIcon from \"../images/whiteHeartIcon.svg\";\nimport blackHeartIcon from \"../images/blackHeartIcon.svg\";\nimport setFavoritos, { isfavoriteRecipe } from '../services/setFavoritos';\nimport getInformation from '../services/getInformation';\n\nfunction FavoriteBtn({\n  objDetail,\n  urlText,\n  id\n}) {\n  const [isFavorite, setIsFavorite] = useState(false);\n  useEffect(() => {\n    isfavoriteRecipe(id, setIsFavorite);\n  }, []);\n\n  const removeFavorite = () => {\n    const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const updatedFavorites = favoriteRecipes.filter(elem => elem.id !== id);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(updatedFavorites));\n    isfavoriteRecipe(id, setIsFavorite);\n  };\n\n  const onClickFavorite = () => {\n    if (isFavorite === true) {\n      return removeFavorite();\n    }\n\n    return setFavoritos(objDetail[0], urlText, id, setIsFavorite);\n  };\n\n  return /*#__PURE__*/React.createElement(\"input\", {\n    className: \"favorite-btn\",\n    onClick: onClickFavorite,\n    type: \"image\",\n    \"data-testid\": \"favorite-btn\",\n    src: isFavorite ? blackHeartIcon : whiteHeartIcon,\n    alt: \"foto do item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  });\n}\n\nFavoriteBtn.propTypes = {\n  objDetail: PropTypes.shape(PropTypes.any).isRequired,\n  urlText: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired\n};\nexport default FavoriteBtn;","map":{"version":3,"sources":["/home/douglas/Área de Trabalho/Trybe/trybe-exercises/Projetos/FrontEnd/sd-08-project-recipes-app/src/components/FavoriteBtn.js"],"names":["React","useState","useEffect","PropTypes","setFavoritos","isfavoriteRecipe","getInformation","FavoriteBtn","objDetail","urlText","id","isFavorite","setIsFavorite","removeFavorite","favoriteRecipes","JSON","parse","localStorage","getItem","updatedFavorites","filter","elem","setItem","stringify","onClickFavorite","blackHeartIcon","whiteHeartIcon","propTypes","shape","any","isRequired","string"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAGA,OAAOC,YAAP,IAAuBC,gBAAvB,QAA+C,0BAA/C;AACA,OAAOC,cAAP,MAA2B,4BAA3B;;AAEA,SAASC,WAAT,CAAqB;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,CAArB,EAAiD;AAC/C,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,KAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,gBAAgB,CAACK,EAAD,EAAKE,aAAL,CAAhB;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMC,cAAc,GAAG,MAAM;AAC3B,UAAMC,eAAe,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAAxB;AACA,UAAMC,gBAAgB,GAAGL,eAAe,CAACM,MAAhB,CAAwBC,IAAD,IAAUA,IAAI,CAACX,EAAL,KAAYA,EAA7C,CAAzB;AACAO,IAAAA,YAAY,CAACK,OAAb,CAAqB,iBAArB,EAAwCP,IAAI,CAACQ,SAAL,CAAeJ,gBAAf,CAAxC;AACAd,IAAAA,gBAAgB,CAACK,EAAD,EAAKE,aAAL,CAAhB;AACD,GALD;;AAOA,QAAMY,eAAe,GAAG,MAAM;AAC5B,QAAIb,UAAU,KAAK,IAAnB,EAAyB;AACvB,aAAOE,cAAc,EAArB;AACD;;AACD,WAAOT,YAAY,CAACI,SAAS,CAAC,CAAD,CAAV,EAAeC,OAAf,EAAwBC,EAAxB,EAA4BE,aAA5B,CAAnB;AACD,GALD;;AAOA,sBACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,OAAO,EAAGY,eAFZ;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,mBAAY,cAJd;AAKE,IAAA,GAAG,EAAGb,UAAU,GAAGc,cAAH,GAAoBC,cALtC;AAME,IAAA,GAAG,EAAC,cANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAUD;;AAEDnB,WAAW,CAACoB,SAAZ,GAAwB;AACtBnB,EAAAA,SAAS,EAAEL,SAAS,CAACyB,KAAV,CACTzB,SAAS,CAAC0B,GADD,EAETC,UAHoB;AAItBrB,EAAAA,OAAO,EAAEN,SAAS,CAAC4B,MAAV,CAAiBD,UAJJ;AAKtBpB,EAAAA,EAAE,EAAEP,SAAS,CAAC4B,MAAV,CAAiBD;AALC,CAAxB;AAQA,eAAevB,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport setFavoritos, { isfavoriteRecipe } from '../services/setFavoritos';\nimport getInformation from '../services/getInformation';\n\nfunction FavoriteBtn({ objDetail, urlText, id }) {\n  const [isFavorite, setIsFavorite] = useState(false);\n\n  useEffect(() => {\n    isfavoriteRecipe(id, setIsFavorite);\n  }, []);\n\n  const removeFavorite = () => {\n    const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const updatedFavorites = favoriteRecipes.filter((elem) => elem.id !== id);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(updatedFavorites));\n    isfavoriteRecipe(id, setIsFavorite);\n  };\n\n  const onClickFavorite = () => {\n    if (isFavorite === true) {\n      return removeFavorite();\n    }\n    return setFavoritos(objDetail[0], urlText, id, setIsFavorite);\n  };\n\n  return (\n    <input\n      className=\"favorite-btn\"\n      onClick={ onClickFavorite }\n      type=\"image\"\n      data-testid=\"favorite-btn\"\n      src={ isFavorite ? blackHeartIcon : whiteHeartIcon }\n      alt=\"foto do item\"\n    />\n  );\n}\n\nFavoriteBtn.propTypes = {\n  objDetail: PropTypes.shape(\n    PropTypes.any,\n  ).isRequired,\n  urlText: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default FavoriteBtn;\n"]},"metadata":{},"sourceType":"module"}