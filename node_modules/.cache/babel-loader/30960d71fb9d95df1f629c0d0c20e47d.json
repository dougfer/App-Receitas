{"ast":null,"code":"import _regeneratorRuntime from\"/home/douglas/\\xC1rea de Trabalho/Projetos em geral/App-Receitas/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/douglas/\\xC1rea de Trabalho/Projetos em geral/App-Receitas/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{useContext}from'react';import{useHistory}from'react-router-dom';import RecipeContext from'../context/RecipeContext';import'../styles/SearchBar.css';function SearchBar(props){var title=props.title;var _useContext=useContext(RecipeContext),setSearchType=_useContext.setSearchType,setSearchInputValue=_useContext.setSearchInputValue,searchInputValue=_useContext.searchInputValue,searchType=_useContext.searchType,searchBarRequestDrink=_useContext.searchBarRequestDrink,searchBarRequestFood=_useContext.searchBarRequestFood,meals=_useContext.meals,shouldRedirect=_useContext.shouldRedirect;var history=useHistory();var requestAPI=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(value){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(value==='Comidas')){_context.next=3;break;}_context.next=3;return searchBarRequestFood(searchType,searchInputValue);case 3:if(!(value==='Bebidas')){_context.next=6;break;}_context.next=6;return searchBarRequestDrink(searchType,searchInputValue);case 6:case\"end\":return _context.stop();}}},_callee);}));return function requestAPI(_x){return _ref.apply(this,arguments);};}();var redirect=function redirect(value){if(meals.length===1){if(value==='Comidas'){history.push(\"/comidas/\".concat(meals[0].idMeal));}if(value==='Bebidas'){history.push(\"/bebidas/\".concat(meals[0].idDrink));}}};return/*#__PURE__*/React.createElement(\"div\",{className:\"search-body\"},shouldRedirect&&redirect(title),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",\"data-testid\":\"search-input\",value:searchInputValue,onChange:function onChange(_ref2){var target=_ref2.target;return setSearchInputValue(target.value);}}),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"ingrediente\"},/*#__PURE__*/React.createElement(\"input\",{type:\"radio\",name:\"searchRadio\",id:\"ingrediente\",\"data-testid\":\"ingredient-search-radio\",value:\"ingrediente\",defaultChecked:true,onChange:function onChange(_ref3){var target=_ref3.target;return setSearchType(target.value);}}),\"ingrediente\"),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"nome\"},/*#__PURE__*/React.createElement(\"input\",{type:\"radio\",name:\"searchRadio\",id:\"nome\",\"data-testid\":\"name-search-radio\",value:\"nome\",onChange:function onChange(_ref4){var target=_ref4.target;return setSearchType(target.value);}}),\"nome\"),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"primeira-letra\"},/*#__PURE__*/React.createElement(\"input\",{type:\"radio\",name:\"searchRadio\",id:\"primeira-letra\",\"data-testid\":\"first-letter-search-radio\",value:\"primeira letra\",onChange:function onChange(_ref5){var target=_ref5.target;return setSearchType(target.value);}}),\"primeira letra\"),/*#__PURE__*/React.createElement(\"button\",{type:\"button\",\"data-testid\":\"exec-search-btn\",onClick:function onClick(){return requestAPI(title);}},\"Buscar\"));}export default SearchBar;","map":{"version":3,"sources":["/home/douglas/Área de Trabalho/Projetos em geral/App-Receitas/src/components/SearchBar.js"],"names":["React","useContext","useHistory","RecipeContext","SearchBar","props","title","setSearchType","setSearchInputValue","searchInputValue","searchType","searchBarRequestDrink","searchBarRequestFood","meals","shouldRedirect","history","requestAPI","value","redirect","length","push","idMeal","idDrink","target"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport RecipeContext from '../context/RecipeContext';\n\nimport '../styles/SearchBar.css';\n\nfunction SearchBar(props) {\n  const { title } = props;\n  const { setSearchType,\n    setSearchInputValue,\n    searchInputValue,\n    searchType,\n    searchBarRequestDrink,\n    searchBarRequestFood,\n    meals,\n    shouldRedirect,\n  } = useContext(RecipeContext);\n  const history = useHistory();\n\n  const requestAPI = async (value) => {\n    if (value === 'Comidas') {\n      await searchBarRequestFood(searchType, searchInputValue);\n    }\n    if (value === 'Bebidas') {\n      await searchBarRequestDrink(searchType, searchInputValue);\n    }\n  };\n\n  const redirect = (value) => {\n    if (meals.length === 1) {\n      if (value === 'Comidas') {\n        history.push(`/comidas/${meals[0].idMeal}`);\n      }\n      if (value === 'Bebidas') {\n        history.push(`/bebidas/${meals[0].idDrink}`);\n      }\n    }\n  };\n\n  return (\n    <div className=\"search-body\">\n      {shouldRedirect && redirect(title)}\n      <input\n        type=\"text\"\n        data-testid=\"search-input\"\n        value={ searchInputValue }\n        onChange={ ({ target }) => setSearchInputValue(target.value) }\n      />\n      <label htmlFor=\"ingrediente\">\n        <input\n          type=\"radio\"\n          name=\"searchRadio\"\n          id=\"ingrediente\"\n          data-testid=\"ingredient-search-radio\"\n          value=\"ingrediente\"\n          defaultChecked\n          onChange={ ({ target }) => setSearchType(target.value) }\n        />\n        ingrediente\n      </label>\n      <label htmlFor=\"nome\">\n        <input\n          type=\"radio\"\n          name=\"searchRadio\"\n          id=\"nome\"\n          data-testid=\"name-search-radio\"\n          value=\"nome\"\n          onChange={ ({ target }) => setSearchType(target.value) }\n        />\n        nome\n      </label>\n      <label htmlFor=\"primeira-letra\">\n        <input\n          type=\"radio\"\n          name=\"searchRadio\"\n          id=\"primeira-letra\"\n          data-testid=\"first-letter-search-radio\"\n          value=\"primeira letra\"\n          onChange={ ({ target }) => setSearchType(target.value) }\n        />\n        primeira letra\n      </label>\n      <button\n        type=\"button\"\n        data-testid=\"exec-search-btn\"\n        onClick={ () => requestAPI(title) }\n      >\n        Buscar\n      </button>\n    </div>\n  );\n}\n\nSearchBar.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}