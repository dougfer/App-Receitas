{"version":3,"sources":["images/shareIcon.svg","images/blackHeartIcon.svg","images/drinkIcon.svg","images/mealIcon.svg","images/exploreIcon.svg","images/searchIcon.svg","images/profileIcon.svg","images/whiteHeartIcon.svg","components/Footer.js","context/RecipeContext.js","components/SearchBar.js","components/Header.js","Pages/Explorar/ExplorarComidas.js","context/Provider.js","components/Card.js","components/RecipesList.js","components/CategoriasBebidas.js","Pages/Bebidas.js","components/CategoriasFood.js","Pages/Comidas.js","components/Loading.js","components/RecommendedCard.js","components/RecommendedList.js","components/ButtonIniciar.js","services/HandleYoutube.js","components/LinkCopiado.js","services/setFavoritos.js","components/FavoriteBtn.js","Pages/Detalhes.js","Pages/Explorar/Explorar.js","Pages/Login.js","Pages/Perfil.js","services/setDoneRecipes.js","components/ButtonFinish.js","components/IngredientsCheckbox.js","Pages/DetalhesInProgress.js","components/CardFeitas.js","Pages/ReceitasFeitas.js","Pages/NotFound.js","components/CardFavoritas.js","services/getInformation.js","Pages/ReceitasFavoritas.js","Pages/Explorar/ExplorarBebidas.js","Pages/Explorar/ExplorarBebidasIngredientes.js","Pages/Explorar/ExplorarComidasIngredientes.js","Pages/Explorar/ExpComidasArea.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Footer","className","data-testid","to","src","drinkIcon","alt","exploreIcon","mealIcon","RecipeContext","createContext","SearchBar","props","value","title","useContext","setSearchType","setSearchInputValue","searchInputValue","searchType","searchBarRequestDrink","searchBarRequestFood","meals","shouldRedirect","history","useHistory","requestAPI","a","length","push","idMeal","idDrink","type","onChange","target","htmlFor","name","id","defaultChecked","onClick","Header","search","useState","renderSeachBar","setRenderSearchBar","profileIcon","seachIcon","defaultProps","ExplorarComidas","fetchSurpriseMeal","fetch","response","json","result","Provider","children","setMeals","isDrinkLoading","setIsDrinkLoading","setShouldRedirect","foodCategory","setFoodCategory","drinkCategory","setDrinkCategory","recommendedFood","setRecommendedFood","recommendedDrink","setRecommendedDrink","copied","setCopied","verifyCheckbox","setVerifyCheckbox","receitasFav","setReceitasFav","cameFromIngredients","setCameFromIngredients","filterByArea","setFilterByArea","inputvalue","alert","responseJson","console","log","Error","message","drinks","directRequestFood","directRequestDrink","requestFoodCategory","requestDrinkCategory","useEffect","context","Card","index","card","location","pathname","includes","strMeal","strMealThumb","renderFood","strDrink","strDrinkThumb","renderDrink","render","RecipesList","map","elem","key","CategoriasFood","fetchCategory","strCategory","firstChild","checked","style","display","Bebidas","CategoriasBebidas","Comidas","document","referrer","Loading","RecommendedCard","RecommendedList","setIndex","Carousel","activeIndex","onSelect","selectedIndex","i","Item","ButtonIniciar","buttonName","setButtonName","verifyId","newArray","localStorage","getItem","inProgress","JSON","parse","novaVariavelFood","Object","keys","cocktails","some","sem","setItem","stringify","setLocalStoragesIngredients","handleYoutube","param","newHttps","undefined","https","strYoutube","split","LinkCopiado","isfavoriteRecipe","idRecipe","callback","setFavoritos","recipeObject","url","favoriteRecipes","allKeys","objeto","area","strArea","category","alcoholicOrNot","strAlcoholic","image","updateFav","setComidaFavorita","setBebidaFavorita","setComidaFavoritaElse","setBebidaFavoritaElse","FavoriteBtn","objDetail","urlText","isFavorite","setIsFavorite","onClickFavorite","updatedFavorites","filter","removeFavorite","blackHeartIcon","whiteHeartIcon","Detalhes","addStartedRecipes","setObjDetail","loading","setLoading","requestRecommendedFood","requestRecommendedDrink","requestByID","setTimeout","handleCopied","getIngredients","ingredientes","entries","measure","element","text","onCopy","shareIcon","width","height","HandleYoutube","strInstructions","Explorar","Login","email","setEmail","password","setPassword","placeholder","e","disabled","test","Perfil","getEmail","removeItem","getCurrentDate","newDate","Date","date","getDate","month","getMonth","year","getFullYear","setDoneRecipes","doneRecipes","doneDate","tags","strTags","updateDone","setDoneFood","setDoneDrink","setDoneFoodElse","setDoneDrinkElse","ButtonFinish","urlType","every","IngredientsCheckbox","handleChange","lista","parentNode","childNodes","listaDeIngredientes","forEach","checkbox","inProgressRecipes","classList","add","remove","array","isChecked","verifyIngredientsChecked","DetalhesInProgress","urlDetails","CardFeitas","ReceitasFeitas","filterType","setFilterType","handleClick","verify","NotFound","goBack","CardFavoritas","getInformation","ReceitasFavoritas","ExplorarBebidas","fetchSurpriseDrink","ExplorarBebidasIngredientes","setIngredientes","fetchIngredients","finalResults","fetchAndRedirect","ingredientName","innerText","then","data","idIngredient1","strIngredient1","ExplorarComidasIngredientes","idIngredient","strIngredient","ExpComidasArea","areas","setAreas","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0f9b6583.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shareIcon.06215ed4.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackHeartIcon.b8913346.svg\";","module.exports = __webpack_public_path__ + \"static/media/drinkIcon.f87c47c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/mealIcon.b27ba19e.svg\";","module.exports = __webpack_public_path__ + \"static/media/exploreIcon.157945ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/searchIcon.db812135.svg\";","module.exports = __webpack_public_path__ + \"static/media/profileIcon.74e487e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteHeartIcon.ea3b6ba8.svg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport drinkIcon from '../images/drinkIcon.svg';\nimport mealIcon from '../images/mealIcon.svg';\nimport exploreIcon from '../images/exploreIcon.svg';\nimport '../styles/Footer.css';\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\" data-testid=\"footer\">\n      <div className=\"footer-content\">\n        <Link to=\"/bebidas\">\n          <img\n            data-testid=\"drinks-bottom-btn\"\n            src={ drinkIcon }\n            alt=\"\"\n          />\n        </Link>\n        <Link to=\"/explorar\">\n          <img\n            data-testid=\"explore-bottom-btn\"\n            src={ exploreIcon }\n            alt=\"\"\n          />\n        </Link>\n        <Link to=\"/comidas\">\n          <img\n            data-testid=\"food-bottom-btn\"\n            src={ mealIcon }\n            alt=\"\"\n          />\n        </Link>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import { createContext } from 'react';\n\nconst RecipeContext = createContext();\n\nexport default RecipeContext;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport RecipeContext from '../context/RecipeContext';\n\nimport '../styles/SearchBar.css';\n\nfunction SearchBar(props) {\n  const { title } = props;\n  const { setSearchType,\n    setSearchInputValue,\n    searchInputValue,\n    searchType,\n    searchBarRequestDrink,\n    searchBarRequestFood,\n    meals,\n    shouldRedirect,\n  } = useContext(RecipeContext);\n  const history = useHistory();\n\n  const requestAPI = async (value) => {\n    if (value === 'Comidas') {\n      await searchBarRequestFood(searchType, searchInputValue);\n    }\n    if (value === 'Bebidas') {\n      await searchBarRequestDrink(searchType, searchInputValue);\n    }\n  };\n\n  const redirect = (value) => {\n    if (meals.length === 1) {\n      if (value === 'Comidas') {\n        history.push(`/comidas/${meals[0].idMeal}`);\n      }\n      if (value === 'Bebidas') {\n        history.push(`/bebidas/${meals[0].idDrink}`);\n      }\n    }\n  };\n\n  return (\n    <div className=\"search-body\">\n      {shouldRedirect && redirect(title)}\n      <input\n        type=\"text\"\n        data-testid=\"search-input\"\n        value={ searchInputValue }\n        onChange={ ({ target }) => setSearchInputValue(target.value) }\n      />\n      <label htmlFor=\"ingrediente\">\n        <input\n          type=\"radio\"\n          name=\"searchRadio\"\n          id=\"ingrediente\"\n          data-testid=\"ingredient-search-radio\"\n          value=\"ingrediente\"\n          defaultChecked\n          onChange={ ({ target }) => setSearchType(target.value) }\n        />\n        ingrediente\n      </label>\n      <label htmlFor=\"nome\">\n        <input\n          type=\"radio\"\n          name=\"searchRadio\"\n          id=\"nome\"\n          data-testid=\"name-search-radio\"\n          value=\"nome\"\n          onChange={ ({ target }) => setSearchType(target.value) }\n        />\n        nome\n      </label>\n      <label htmlFor=\"primeira-letra\">\n        <input\n          type=\"radio\"\n          name=\"searchRadio\"\n          id=\"primeira-letra\"\n          data-testid=\"first-letter-search-radio\"\n          value=\"primeira letra\"\n          onChange={ ({ target }) => setSearchType(target.value) }\n        />\n        primeira letra\n      </label>\n      <button\n        type=\"button\"\n        data-testid=\"exec-search-btn\"\n        onClick={ () => requestAPI(title) }\n      >\n        Buscar\n      </button>\n    </div>\n  );\n}\n\nSearchBar.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default SearchBar;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport seachIcon from '../images/searchIcon.svg';\nimport profileIcon from '../images/profileIcon.svg';\nimport SearchBar from './SearchBar';\n\nimport '../styles/Header.css';\n\nfunction Header({ title, search }) {\n  const [renderSeachBar, setRenderSearchBar] = useState(false);\n  return (\n    <header className=\"header\">\n      <div className=\"header-content\">\n        <Link to=\"/perfil\">\n          <img\n            data-testid=\"profile-top-btn\"\n            src={ profileIcon }\n            alt=\"\"\n          />\n        </Link>\n        <h1 data-testid=\"page-title\">\n          {title}\n        </h1>\n        {search === false\n          ? ''\n          : (\n            <input\n              onClick={ () => setRenderSearchBar(!renderSeachBar) }\n              type=\"image\"\n              data-testid=\"search-top-btn\"\n              src={ seachIcon }\n              alt=\"\"\n            />)}\n\n      </div>\n      {renderSeachBar && <SearchBar title={ title } />}\n    </header>\n  );\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n  search: PropTypes.bool,\n};\n\nHeader.defaultProps = {\n  search: true,\n};\n\nexport default Header;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Footer from '../../components/Footer';\nimport Header from '../../components/Header';\n\nfunction ExplorarComidas({ history }) {\n  const fetchSurpriseMeal = async () => {\n    const response = await fetch('https://www.themealdb.com/api/json/v1/1/random.php');\n    const result = await response.json();\n    const id = result.meals[0].idMeal;\n    history.push(`/comidas/${id}`);\n  };\n\n  return (\n    <div className=\"explore-big\">\n      <Header title=\"Explorar Comidas\" search={ false } />\n      <div className=\"btn-content\">\n        <Link to=\"/explorar/comidas/ingredientes\">\n          <span data-testid=\"explore-by-ingredient\">\n            Por Ingredientes\n          </span>\n        </Link>\n        <Link to=\"/explorar/comidas/area\">\n          <span data-testid=\"explore-by-area\">\n            Por Local de Origem\n          </span>\n        </Link>\n        <button\n          type=\"button\"\n          onClick={ () => fetchSurpriseMeal() }\n          data-testid=\"explore-surprise\"\n        >\n          Me Surpreenda!\n        </button>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nExplorarComidas.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nexport default ExplorarComidas;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipeContext from './RecipeContext';\n\nfunction Provider({ children }) {\n  const [meals, setMeals] = useState([]);\n  const [isDrinkLoading, setIsDrinkLoading] = useState(false);\n  const [shouldRedirect, setShouldRedirect] = useState(false);\n  const [foodCategory, setFoodCategory] = useState([]);\n  const [drinkCategory, setDrinkCategory] = useState([]);\n  const [searchType, setSearchType] = useState('ingrediente');\n  const [searchInputValue, setSearchInputValue] = useState('');\n  const [recommendedFood, setRecommendedFood] = useState([]);\n  const [recommendedDrink, setRecommendedDrink] = useState([]);\n  const [copied, setCopied] = useState(false);\n  const [verifyCheckbox, setVerifyCheckbox] = useState([false]);\n  const [receitasFav, setReceitasFav] = useState([]);\n  const [cameFromIngredients, setCameFromIngredients] = useState(false);\n  const [filterByArea, setFilterByArea] = useState('All');\n\n  const searchBarRequestFood = async (type, inputvalue) => {\n    try {\n      let response = '';\n      if (type === 'ingrediente') {\n        response = await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?i=${inputvalue}`);\n      }\n      if (type === 'nome') {\n        response = await fetch(`https://www.themealdb.com/api/json/v1/1/search.php?s=${inputvalue}`);\n      }\n      if (type === 'primeira letra') {\n        if (inputvalue.length !== 1) {\n          return alert('Sua busca deve conter somente 1 (um) caracter');\n        }\n        response = await fetch(`https://www.themealdb.com/api/json/v1/1/search.php?f=${inputvalue}`);\n      }\n      const responseJson = await response.json();\n      console.log(responseJson);\n      if (responseJson.meals === null) {\n        throw new Error('Nao existem receitas');\n      }\n      setMeals(responseJson.meals);\n    } catch (error) {\n      console.log(error.message);\n      alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n      return error;\n    }\n  };\n\n  const searchBarRequestDrink = async (type, inputvalue) => {\n    try {\n      let response = '';\n      if (type === 'ingrediente') {\n        response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${inputvalue}`);\n      }\n      if (type === 'nome') {\n        response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${inputvalue}`);\n      }\n      if (type === 'primeira letra') {\n        if (inputvalue.length !== 1) {\n          return alert('Sua busca deve conter somente 1 (um) caracter');\n        }\n        response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/search.php?f=${inputvalue}`);\n      }\n      const responseJson = await response.json();\n      if (responseJson.drinks === null) {\n        throw new Error('Nao existem receitas');\n      }\n      setMeals(responseJson.drinks);\n    } catch (error) {\n      alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n      return error;\n    }\n  };\n\n  const directRequestFood = async () => {\n    setIsDrinkLoading(true);\n    const response = await fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=');\n    const result = await response.json();\n    setMeals(result.meals);\n    setIsDrinkLoading(false);\n  };\n\n  const directRequestDrink = async () => {\n    setIsDrinkLoading(true);\n    const response = await fetch('https://www.thecocktaildb.com/api/json/v1/1/search.php?s=');\n    const result = await response.json();\n    setMeals(result.drinks);\n    setIsDrinkLoading(false);\n  };\n\n  const requestFoodCategory = async () => {\n    const response = await fetch('https://www.themealdb.com/api/json/v1/1/list.php?c=list');\n    const result = await response.json();\n    setFoodCategory(result.meals);\n  };\n\n  const requestDrinkCategory = async () => {\n    const response = await fetch('https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list');\n    const result = await response.json();\n    setDrinkCategory(result.drinks);\n  };\n\n  useEffect(() => {\n    setShouldRedirect(true);\n  }, [meals]);\n\n  useEffect(() => {\n    requestDrinkCategory();\n    requestFoodCategory();\n  }, []);\n\n  const context = {\n    copied,\n    setCopied,\n    recommendedFood,\n    recommendedDrink,\n    setRecommendedFood,\n    setRecommendedDrink,\n    setIsDrinkLoading,\n    setMeals,\n    foodCategory,\n    drinkCategory,\n    directRequestFood,\n    isDrinkLoading,\n    setShouldRedirect,\n    directRequestDrink,\n    setSearchType,\n    searchType,\n    setSearchInputValue,\n    searchInputValue,\n    searchBarRequestDrink,\n    searchBarRequestFood,\n    meals,\n    shouldRedirect,\n    verifyCheckbox,\n    setVerifyCheckbox,\n    setReceitasFav,\n    receitasFav,\n    cameFromIngredients,\n    setCameFromIngredients,\n    filterByArea,\n    setFilterByArea,\n  };\n\n  return (\n    <RecipeContext.Provider value={ context }>\n      {children}\n    </RecipeContext.Provider>\n  );\n}\n\nProvider.propTypes = {\n  children: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default Provider;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useHistory } from 'react-router-dom';\nimport '../styles/Card.css';\n\nfunction Card({ index, card }) {\n  const history = useHistory();\n\n  const renderDrink = () => {\n    const { strDrink, strDrinkThumb, idDrink } = card;\n    return (\n      <Link to={ `/bebidas/${idDrink}` }>\n        <div className=\"card\">\n          <h1 className=\"food-title\" data-testid={ `${index}-card-name` }>{strDrink}</h1>\n          <img\n            className=\"food-image\"\n            data-testid={ `${index}-card-img` }\n            src={ strDrinkThumb }\n            alt={ strDrink }\n          />\n        </div>\n      </Link>\n    );\n  };\n\n  const renderFood = () => {\n    const { strMeal, strMealThumb, idMeal } = card;\n    return (\n      <Link to={ `/comidas/${idMeal}` }>\n        <div className=\"card\">\n          <h1 className=\"food-title\" data-testid={ `${index}-card-name` }>{strMeal}</h1>\n          <img\n            className=\"food-image\"\n            data-testid={ `${index}-card-img` }\n            src={ strMealThumb }\n            alt={ strMeal }\n          />\n        </div>\n      </Link>\n    );\n  };\n\n  const render = () => {\n    const value = history.location.pathname;\n    if (value.includes('comidas')) {\n      return renderFood();\n    }\n    if (value.includes('bebidas')) {\n      return renderDrink();\n    }\n  };\n\n  return (\n    <div data-testid={ `${index}-recipe-card` }>\n      {render()}\n    </div>\n  );\n}\n\nCard.propTypes = {\n  index: PropTypes.number.isRequired,\n  card: PropTypes.shape({\n    strDrink: PropTypes.string,\n    strDrinkThumb: PropTypes.string,\n    strMeal: PropTypes.string,\n    strMealThumb: PropTypes.string,\n    idMeal: PropTypes.string,\n    idDrink: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Card;\n","import React, { useContext } from 'react';\nimport Card from './Card';\nimport RecipeContext from '../context/RecipeContext';\n\nfunction RecipesList() {\n  const MAX_ITEMS = 12;\n  const { meals } = useContext(RecipeContext);\n\n  return (\n    <div>\n      {meals\n        .map((elem, index) => {\n          if (index < MAX_ITEMS) {\n            return <Card key={ index } card={ elem } index={ index } />;\n          }\n          return '';\n        })}\n    </div>\n  );\n}\n\nexport default RecipesList;\n","import React, { useContext } from 'react';\nimport RecipeContext from '../context/RecipeContext';\n\nimport '../styles/Categorias.css';\n\nfunction CategoriasFood() {\n  const { drinkCategory, setMeals,\n    setIsDrinkLoading, directRequestDrink } = useContext(RecipeContext);\n  const MIN_ELEMN = 5;\n\n  const fetchCategory = async (value) => {\n    setIsDrinkLoading(true);\n    const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${value}`);\n    const result = await response.json();\n    setMeals(result.drinks);\n    setIsDrinkLoading(false);\n  };\n\n  return (\n    <div className=\"categorias\">\n      <button\n        type=\"button\"\n        onClick={ () => directRequestDrink() }\n        data-testid=\"All-category-filter\"\n      >\n        All\n      </button>\n      {drinkCategory.map((elem, index) => {\n        if (index < MIN_ELEMN) {\n          return (\n            <button\n              className=\".drink-btn\"\n              data-testid={ `${elem.strCategory}-category-filter` }\n              type=\"button\"\n              value={ elem.strCategory }\n              onClick={ ({ target }) => {\n                target.firstChild.checked = !target.firstChild.checked;\n                return (\n                  target.firstChild.checked\n                    ? fetchCategory(target.value) : directRequestDrink());\n              } }\n              key={ elem.strCategory }\n            >\n              <input style={ { display: 'none' } } type=\"checkbox\" />\n              {elem.strCategory}\n            </button>);\n        }\n        return '';\n      })}\n    </div>\n  );\n}\n\nexport default CategoriasFood;\n","import React, { useContext, useEffect } from 'react';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport RecipesList from '../components/RecipesList';\nimport RecipeContext from '../context/RecipeContext';\nimport CategoriasBebidas from '../components/CategoriasBebidas';\n\nfunction Bebidas() {\n  const {\n    directRequestDrink, isDrinkLoading, cameFromIngredients } = useContext(RecipeContext);\n\n  useEffect(() => {\n    if (!cameFromIngredients) {\n      directRequestDrink();\n    }\n  }, []);\n  return (\n    <div className=\"bebidas-body\">\n      <div className=\"recipes-background-color\" />\n      <Header title=\"Bebidas\" />\n      <CategoriasBebidas />\n      { !isDrinkLoading ? (\n        <div>\n          <RecipesList />\n        </div>) : <p>Carregando</p> }\n      <Footer />\n    </div>\n  );\n}\n\nexport default Bebidas;\n","import React, { useContext } from 'react';\nimport RecipeContext from '../context/RecipeContext';\n\nimport '../styles/Categorias.css';\n\nfunction CategoriasFood() {\n  const { foodCategory, directRequestFood,\n    setIsDrinkLoading, setMeals } = useContext(RecipeContext);\n  const MIN_ELEMN = 5;\n\n  const fetchCategory = async (value) => {\n    setIsDrinkLoading(true);\n    const response = await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${value}`);\n    const result = await response.json();\n    setMeals(result.meals);\n    setIsDrinkLoading(false);\n  };\n\n  return (\n    <div className=\"categorias\">\n      <button\n        type=\"button\"\n        onClick={ () => directRequestFood() }\n        data-testid=\"All-category-filter\"\n      >\n        All\n      </button>\n      {foodCategory.map((elem, index) => {\n        if (index < MIN_ELEMN) {\n          return (\n            <button\n              data-testid={ `${elem.strCategory}-category-filter` }\n              type=\"button\"\n              value={ elem.strCategory }\n              onClick={ ({ target }) => {\n                target.firstChild.checked = !target.firstChild.checked;\n                return (\n                  target.firstChild.checked\n                    ? fetchCategory(target.value) : directRequestFood());\n              } }\n              key={ elem.strCategory }\n            >\n              <input type=\"checkbox\" style={ { display: 'none' } } />\n              {elem.strCategory}\n            </button>);\n        }\n        return '';\n      })}\n    </div>\n  );\n}\n\nexport default CategoriasFood;\n","import React, { useContext, useEffect } from 'react';\nimport CategoriasFood from '../components/CategoriasFood';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport RecipesList from '../components/RecipesList';\nimport RecipeContext from '../context/RecipeContext';\n\nfunction Comidas() {\n  const {\n    directRequestFood, isDrinkLoading, cameFromIngredients } = useContext(RecipeContext);\n\n  useEffect(() => {\n    if (!cameFromIngredients) {\n      directRequestFood();\n    }\n  }, []);\n\n  return (\n    <div className=\"comidas-body\">\n      <Header title=\"Comidas\" />\n      <div className=\"recipes-background-color\" />\n      <CategoriasFood />\n      {!isDrinkLoading ? (\n        <div>\n          {console.log(document.referrer)}\n          <RecipesList />\n        </div>) : <div className=\"loading\" />}\n      <Footer />\n    </div>\n  );\n}\n\nexport default Comidas;\n","import React from 'react';\n\nimport '../styles/Loading.css';\n\nfunction Loading() {\n  return (\n    <div className=\"loading-body\">\n      <div className=\"loading\" />\n      <h1>carregando...</h1>\n    </div>\n  );\n}\n\nexport default Loading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport '../styles/RecommendedCard.css';\n\nfunction RecommendedCard({ index, card }) {\n  const history = useHistory();\n\n  const renderDrink = () => {\n    const { strDrink, strDrinkThumb, idDrink } = card;\n    return (\n      <Link to={ `/bebidas/${idDrink}` }>\n        <div\n          className=\"recommended-card\"\n          data-testid={ `${index}-recomendation-card` }\n        >\n          <h1 data-testid={ `${index}-recomendation-title` }>{strDrink}</h1>\n          <img\n            className=\"recommended-image\"\n            data-testid={ `${index}-card-img` }\n            src={ strDrinkThumb }\n            alt={ strDrink }\n          />\n        </div>\n      </Link>\n    );\n  };\n\n  const renderFood = () => {\n    const { strMeal, strMealThumb, idMeal } = card;\n    return (\n      <Link to={ `/comidas/${idMeal}` }>\n        <div\n          className=\"recommended-card\"\n          data-testid={ `${index}-recomendation-card` }\n        >\n          <h1\n            data-testid={ `${index}-recomendation-title` }\n            className=\"food-title\"\n          >\n            {strMeal}\n          </h1>\n          <img\n            className=\"recommended-image\"\n            data-testid={ `${index}-card-img` }\n            src={ strMealThumb }\n            alt={ strMeal }\n          />\n        </div>\n      </Link>\n    );\n  };\n\n  const render = () => {\n    const value = history.location.pathname;\n    if (value.includes('comidas')) {\n      return renderDrink();\n    }\n    if (value.includes('bebidas')) {\n      return renderFood();\n    }\n  };\n\n  return (\n    <div data-testid={ `${index}-recipe-card` }>\n      {render()}\n    </div>\n  );\n}\n\nRecommendedCard.propTypes = {\n  index: PropTypes.number.isRequired,\n  card: PropTypes.shape({\n    strDrink: PropTypes.string,\n    strDrinkThumb: PropTypes.string,\n    strMeal: PropTypes.string,\n    strMealThumb: PropTypes.string,\n    idMeal: PropTypes.string,\n    idDrink: PropTypes.string,\n  }).isRequired,\n};\n\nexport default RecommendedCard;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Carousel } from 'react-bootstrap';\nimport RecommendedCard from './RecommendedCard';\n\nfunction RecommendedList({ value }) {\n  const [index, setIndex] = useState(0);\n\n  const handleSelect = (selectedIndex) => {\n    setIndex(selectedIndex);\n  };\n\n  const MAX_RECIPES = 6;\n  return (\n    <Carousel activeIndex={ index } onSelect={ handleSelect }>\n      {value.map((elem, i) => {\n        if (i < MAX_RECIPES) {\n          return (\n            <Carousel.Item>\n              <RecommendedCard\n                key={ i }\n                card={ elem }\n                index={ i }\n              />\n            </Carousel.Item>\n          );\n        }\n        return '';\n      })}\n    </Carousel>\n  );\n}\n\nRecommendedList.propTypes = {\n  value: PropTypes.shape(\n    PropTypes.any,\n  ).isRequired,\n};\n\nexport default RecommendedList;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n\nfunction ButtonIniciar({ id }) {\n  const history = useHistory();\n\n  const iniciarReceita = 'Iniciar Receita';\n\n  const [buttonName, setButtonName] = useState(iniciarReceita);\n\n  const value = history.location.pathname;\n\n  const setLocalStoragesIngredients = () => {\n    if (localStorage.getItem('inProgressRecipes') !== null) {\n      const sem = localStorage.getItem('inProgressRecipes');\n      const inProgress = JSON.parse(sem);\n      if (value.includes('comidas')) {\n        localStorage.setItem('inProgressRecipes', JSON.stringify({\n          ...inProgress,\n          meals: {\n            ...inProgress.meals,\n            [id]: [],\n          },\n        }));\n      }\n      if (value.includes('bebidas')) {\n        localStorage.setItem('inProgressRecipes', JSON.stringify({\n          ...inProgress,\n          cocktails: {\n            ...inProgress.cocktails,\n            [id]: [],\n          },\n        }));\n      }\n    } else {\n      if (value.includes('comidas')) {\n        localStorage.setItem('inProgressRecipes', JSON.stringify({\n          meals: {\n            [id]: [],\n          },\n          cocktails: {},\n        }));\n      }\n      if (value.includes('bebidas')) {\n        localStorage.setItem('inProgressRecipes', JSON.stringify({\n          cocktails: {\n            [id]: [],\n          },\n          meals: {},\n        }));\n      }\n    }\n  };\n\n  const verifyId = () => {\n    let newArray = [];\n    if (localStorage.getItem('inProgressRecipes') !== null) {\n      const inProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n      if (value.includes('comidas')) {\n        const novaVariavelFood = Object.keys(inProgress.meals);\n        newArray = [...novaVariavelFood];\n      }\n      if (value.includes('bebidas')) {\n        const novaVariavelFood = Object.keys(inProgress.cocktails);\n        newArray = [...novaVariavelFood];\n      }\n    }\n    return newArray;\n  };\n\n  const handleRedirect = () => {\n    if (value.includes('comidas')) {\n      history.push(`/comidas/${id}/in-progress`);\n    }\n    if (value.includes('bebidas')) {\n      history.push(`/bebidas/${id}/in-progress`);\n    }\n  };\n\n  useEffect(() => {\n    setButtonName(verifyId().some((elem) => elem === id)\n      ? 'Continuar Receita' : iniciarReceita);\n  }, []);\n\n  return (\n    <div>\n      <button\n        className=\"start-recipe-btn\"\n        type=\"button\"\n        data-testid=\"start-recipe-btn\"\n        onClick={ () => {\n          setLocalStoragesIngredients();\n          setButtonName(verifyId().some((elem) => elem === id)\n            ? 'Continuar Receita' : iniciarReceita);\n          handleRedirect();\n        } }\n      >\n        {buttonName}\n      </button>\n    </div>\n  );\n}\n\nButtonIniciar.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default ButtonIniciar;\n","const handleYoutube = (param) => {\n  let newHttps;\n  if (param.idDrink === undefined) {\n    const https = param.strYoutube.split('https://www.youtube.com/watch?v=');\n    newHttps = `https://www.youtube.com/embed/${https[1]}`;\n  }\n  return newHttps;\n};\n\nexport default handleYoutube;\n","import React, { useContext } from 'react';\nimport RecipeContext from '../context/RecipeContext';\n\nfunction LinkCopiado() {\n  const { copied } = useContext(RecipeContext);\n  return (\n    copied && <span className=\"copied-link\">Link copiado!</span>\n  );\n}\n\nexport default LinkCopiado;\n","const setComidaFavorita = (recipeObject) => {\n  console.log('entrou no if comidas');\n  const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n\n  const allKeys = Object.keys(recipeObject);\n\n  const objeto = {\n    id: recipeObject.idMeal,\n    type: 'comida',\n    area: allKeys.some(\n      (elem) => elem === 'strArea',\n    ) ? recipeObject.strArea : '',\n    category: allKeys.some(\n      (elem) => elem === 'strCategory',\n    ) ? recipeObject.strCategory : '',\n    alcoholicOrNot: allKeys.some(\n      (elem) => elem === 'strAlcoholic',\n    ) ? recipeObject.strAlcoholic : '',\n    name: recipeObject.strMeal,\n    image: recipeObject.strMealThumb,\n  };\n\n  const updateFav = [\n    ...favoriteRecipes,\n    objeto,\n  ];\n\n  localStorage.setItem('favoriteRecipes', JSON.stringify(updateFav));\n};\n\nconst setComidaFavoritaElse = (recipeObject) => {\n  console.log('entrou no if comidas');\n\n  const allKeys = Object.keys(recipeObject);\n\n  const objeto = {\n    id: recipeObject.idMeal,\n    type: 'comida',\n    area: allKeys.some(\n      (elem) => elem === 'strArea',\n    ) ? recipeObject.strArea : '',\n    category: allKeys.some(\n      (elem) => elem === 'strCategory',\n    ) ? recipeObject.strCategory : '',\n    alcoholicOrNot: allKeys.some(\n      (elem) => elem === 'strAlcoholic',\n    ) ? recipeObject.strAlcoholic : '',\n    name: recipeObject.strMeal,\n    image: recipeObject.strMealThumb,\n  };\n\n  const updateFav = [\n    objeto,\n  ];\n\n  localStorage.setItem('favoriteRecipes', JSON.stringify(updateFav));\n};\n\nconst setBebidaFavorita = (recipeObject) => {\n  console.log('entrou no if Bebidas');\n  const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n\n  const allKeys = Object.keys(recipeObject);\n\n  const objeto = {\n    id: recipeObject.idDrink,\n    type: 'bebida',\n    area: allKeys.some(\n      (elem) => elem === 'strArea',\n    ) ? recipeObject.strArea : '',\n    category: allKeys.some(\n      (elem) => elem === 'strCategory',\n    ) ? recipeObject.strCategory : '',\n    alcoholicOrNot: allKeys.some(\n      (elem) => elem === 'strAlcoholic',\n    ) ? recipeObject.strAlcoholic : '',\n    name: recipeObject.strDrink,\n    image: recipeObject.strDrinkThumb,\n  };\n\n  const updateFav = [\n    ...favoriteRecipes,\n    objeto,\n  ];\n\n  localStorage.setItem('favoriteRecipes', JSON.stringify(updateFav));\n};\n\nconst setBebidaFavoritaElse = (recipeObject) => {\n  console.log('entrou no if bebidas');\n\n  const allKeys = Object.keys(recipeObject);\n\n  const objeto = {\n    id: recipeObject.idDrink,\n    type: 'bebida',\n    area: allKeys.some(\n      (elem) => elem === 'strArea',\n    ) ? recipeObject.strArea : '',\n    category: allKeys.some(\n      (elem) => elem === 'strCategory',\n    ) ? recipeObject.strCategory : '',\n    alcoholicOrNot: allKeys.some(\n      (elem) => elem === 'strAlcoholic',\n    ) ? recipeObject.strAlcoholic : '',\n    name: recipeObject.strDrink,\n    image: recipeObject.strDrinkThumb,\n  };\n\n  const updateFav = [\n    objeto,\n  ];\n\n  localStorage.setItem('favoriteRecipes', JSON.stringify(updateFav));\n};\n\nconst isfavoriteRecipe = (idRecipe, callback) => {\n  if (localStorage.getItem('favoriteRecipes') !== null) {\n    const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n\n    callback(favoriteRecipes.some((elem) => elem.id === idRecipe));\n  }\n};\n\nconst setFavoritos = (recipeObject, url, id, callback) => {\n  console.log('inicio');\n  if (localStorage.getItem('favoriteRecipes') !== null) {\n    console.log('entrou no if');\n\n    if (url.includes('comida')) {\n      setComidaFavorita(recipeObject);\n    }\n    if (url.includes('bebida')) {\n      setBebidaFavorita(recipeObject);\n    }\n  } else {\n    if (url.includes('comida')) {\n      setComidaFavoritaElse(recipeObject);\n    }\n    if (url.includes('bebida')) {\n      setBebidaFavoritaElse(recipeObject);\n    }\n  }\n  isfavoriteRecipe(id, callback);\n};\n\nexport { isfavoriteRecipe };\nexport default setFavoritos;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport setFavoritos, { isfavoriteRecipe } from '../services/setFavoritos';\n\nfunction FavoriteBtn({ objDetail, urlText, id }) {\n  const [isFavorite, setIsFavorite] = useState(false);\n\n  useEffect(() => {\n    isfavoriteRecipe(id, setIsFavorite);\n  }, []);\n\n  const removeFavorite = () => {\n    const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const updatedFavorites = favoriteRecipes.filter((elem) => elem.id !== id);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(updatedFavorites));\n    isfavoriteRecipe(id, setIsFavorite);\n  };\n\n  const onClickFavorite = () => {\n    if (isFavorite === true) {\n      return removeFavorite();\n    }\n    return setFavoritos(objDetail[0], urlText, id, setIsFavorite);\n  };\n\n  return (\n    <input\n      className=\"favorite-btn\"\n      onClick={ () => onClickFavorite() }\n      type=\"image\"\n      data-testid=\"favorite-btn\"\n      src={ isFavorite ? blackHeartIcon : whiteHeartIcon }\n      alt=\"foto do item\"\n    />\n  );\n}\n\nFavoriteBtn.propTypes = {\n  objDetail: PropTypes.shape(\n    PropTypes.any,\n  ).isRequired,\n  urlText: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default FavoriteBtn;\n","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport RecipeContext from '../context/RecipeContext';\nimport '../styles/Detalhes.css';\nimport shareIcon from '../images/shareIcon.svg';\nimport Loading from '../components/Loading';\nimport RecommendedList from '../components/RecommendedList';\nimport ButtonIniciar from '../components/ButtonIniciar';\nimport HandleYoutube from '../services/HandleYoutube';\nimport LinkCopiado from '../components/LinkCopiado';\nimport FavoriteBtn from '../components/FavoriteBtn';\n\nfunction Detalhes() {\n  const history = useHistory();\n  const urlText = history.location.pathname;\n  const id = urlText.split('s/')[1];\n  const TWO_SECONDS = 2000;\n\n  const { setShouldRedirect, addStartedRecipes,\n    recommendedFood, recommendedDrink, setRecommendedFood,\n    setRecommendedDrink, setCopied } = useContext(RecipeContext);\n\n  const [objDetail, setObjDetail] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const requestRecommendedFood = async () => {\n    const response = await fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=');\n    const result = await response.json();\n    setRecommendedFood(result.meals);\n  };\n\n  const requestRecommendedDrink = async () => {\n    const response = await fetch('https://www.thecocktaildb.com/api/json/v1/1/search.php?s=');\n    const result = await response.json();\n    setRecommendedDrink(result.drinks);\n  };\n\n  const requestByID = async () => {\n    let response = [];\n    if (urlText.includes('bebidas')) {\n      response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const responseJson = await response.json();\n      await setObjDetail(responseJson.drinks);\n      requestRecommendedFood();\n    }\n    if (urlText.includes('comidas')) {\n      response = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const responseJson = await response.json();\n      await setObjDetail(responseJson.meals);\n      requestRecommendedDrink();\n    }\n    setTimeout(() => {\n      setLoading(false);\n    }, TWO_SECONDS);\n  };\n\n  const handleCopied = () => {\n    setCopied(true);\n    setTimeout(() => {\n      setCopied(false);\n    }, TWO_SECONDS);\n  };\n\n  const getIngredients = () => {\n    const ingredientes = Object.entries(objDetail[0]);\n\n    const measure = ingredientes.filter((elem) => (\n      elem[0].includes('strMeasure') && elem[1] !== null && elem[1] !== ''\n    ));\n    const filtering = ingredientes.filter((element) => (\n      element[0].includes('strIngredient') && element[1] !== null && element[1] !== ''));\n\n    const results = filtering.map((elem, index) => (\n      <li\n        key={ elem[1] }\n        data-testid={ `${index}-ingredient-name-and-measure` }\n      >\n        {elem[1]}\n        <span>{measure[index] === undefined ? '' : measure[index][1]}</span>\n      </li>));\n\n    return results;\n  };\n\n  useEffect(() => {\n    requestByID();\n    setShouldRedirect(false);\n  }, [history.location.pathname]);\n\n  const renderDrink = () => (\n    <div className=\"details\">\n      <h1\n        data-testid=\"recipe-category\"\n      >\n        {`${objDetail[0].strCategory} (${objDetail[0].strAlcoholic})`}\n      </h1>\n      <h2 data-testid=\"recipe-title\">{objDetail[0].strDrink}</h2>\n      <img\n        data-testid=\"recipe-photo\"\n        className=\"food-image\"\n        src={ objDetail[0].strDrinkThumb }\n        alt={ objDetail[0].strDrink }\n      />\n      <div className=\"icons\">\n        <LinkCopiado />\n        <CopyToClipboard\n          text={ `http://localhost:3000${urlText}` }\n          onCopy={ handleCopied }\n        >\n          <input\n            className=\"share-btn\"\n            type=\"image\"\n            data-testid=\"share-btn\"\n            src={ shareIcon }\n            alt={ objDetail[0].strDrink }\n          />\n        </CopyToClipboard>\n        <FavoriteBtn urlText={ urlText } objDetail={ objDetail } id={ id } />\n      </div>\n      <ol className=\"ingredient-list\">\n        { getIngredients() }\n      </ol>\n      <p data-testid=\"instructions\">{objDetail[0].strInstructions}</p>\n      <RecommendedList value={ recommendedFood } />\n      <ButtonIniciar\n        onClick={ () => addStartedRecipes(id) }\n        id={ id }\n        objDetail={ objDetail }\n      />\n    </div>\n  );\n\n  const renderFood = () => (\n    <div className=\"details\">\n      <h1 data-testid=\"recipe-category\">{objDetail[0].strCategory}</h1>\n      <h2 data-testid=\"recipe-title\">{objDetail[0].strMeal}</h2>\n      <img\n        data-testid=\"recipe-photo\"\n        src={ objDetail[0].strMealThumb }\n        alt={ objDetail[0].strMeal }\n      />\n      <div className=\"icons\">\n        <LinkCopiado />\n        <CopyToClipboard\n          text={ `http://localhost:3000${urlText}` }\n          onCopy={ () => {\n            handleCopied();\n          } }\n        >\n          <input\n            type=\"image\"\n            data-testid=\"share-btn\"\n            src={ shareIcon }\n            alt={ objDetail[0].strMeal }\n          />\n        </CopyToClipboard>\n        <FavoriteBtn urlText={ urlText } objDetail={ objDetail } id={ id } />\n      </div>\n      <ol className=\"ingredient-list\">\n        { getIngredients() }\n      </ol>\n      <iframe\n        data-testid=\"video\"\n        width=\"300px\"\n        height=\"200px\"\n        src={ HandleYoutube(objDetail[0]) }\n        title=\"YouTube video player\"\n      />\n      <p data-testid=\"instructions\">{objDetail[0].strInstructions}</p>\n      <RecommendedList value={ recommendedDrink } />\n      <ButtonIniciar\n        onClick={ () => addStartedRecipes(id) }\n        id={ id }\n        objDetail={ objDetail }\n      />\n    </div>\n  );\n\n  const render = () => {\n    const value = history.location.pathname;\n    console.log(Object.keys(objDetail[0]));\n    if (value.includes('comidas')) {\n      return renderFood();\n    }\n    if (value.includes('bebidas')) {\n      return renderDrink();\n    }\n  };\n\n  return (\n    <div>\n      {loading ? <Loading /> : render()}\n    </div>\n  );\n}\n\nexport default Detalhes;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../../components/Header';\nimport Footer from '../../components/Footer';\n\nimport '../../styles/Explorar.css';\nimport '../../styles/ExplorarSubpastas.css';\n\nfunction Explorar() {\n  return (\n    <div className=\"explore\">\n      <Header title=\"Explorar\" search={ false } />\n      <div className=\"explorar-body\">\n        <Link to=\"/explorar/comidas\">\n          <div className=\"options food\">\n            <div className=\"button\" data-testid=\"explore-food\">Explorar Comidas</div>\n          </div>\n        </Link>\n        <Link to=\"/explorar/bebidas\">\n          <div className=\"options drink\">\n            <div className=\"button\" data-testid=\"explore-drinks\">Explorar Bebidas</div>\n          </div>\n        </Link>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Explorar;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport '../styles/Login.css';\n\nfunction Login({ history }) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const checkValidity = () => {\n    const MIN_PASSWORD_LENGTH = 6;\n    if (password.length <= MIN_PASSWORD_LENGTH) return false;\n    if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) return false;\n    return true;\n  };\n\n  const saveToken = () => {\n    localStorage.setItem('mealsToken', 1);\n    localStorage.setItem('cocktailsToken', 1);\n    localStorage.setItem('user', JSON.stringify({\n      email,\n    }));\n    history.push('/comidas');\n  };\n\n  return (\n    <div className=\"login-body\">\n      <div className=\"login-content\">\n        <div className=\"title\">\n          <h1>\n            try\n            <span className=\"by\">by</span>\n            {' '}\n            <span className=\"yourself\">yourself</span>\n          </h1>\n          <div className=\"slogan\">\n            <p className=\"p1\">Se quer algo bem feito,</p>\n            <p className=\"p2\">faça voce mesmo!</p>\n          </div>\n        </div>\n        <input\n          type=\"text\"\n          placeholder=\"Email\"\n          data-testid=\"email-input\"\n          value={ email }\n          onChange={ (e) => setEmail(e.target.value) }\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Senha\"\n          data-testid=\"password-input\"\n          value={ password }\n          onChange={ (e) => setPassword(e.target.value) }\n\n        />\n\n        <button\n          type=\"button\"\n          data-testid=\"login-submit-btn\"\n          disabled={ !checkValidity() }\n          onClick={ saveToken }\n        >\n          Entrar\n        </button>\n      </div>\n    </div>\n  );\n}\n\nLogin.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nexport default Login;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\n\nimport '../styles/Perfil.css';\n\nfunction Perfil() {\n  const getEmail = () => {\n    if (localStorage.getItem('user') !== null) {\n      const { email } = JSON.parse(localStorage.getItem('user'));\n      return email;\n    }\n  };\n\n  const clearLocalStorage = () => {\n    localStorage.removeItem('user');\n    localStorage.removeItem('mealsToken');\n    localStorage.removeItem('cocktailsToken');\n    localStorage.removeItem('doneRecipes');\n    localStorage.removeItem('favoriteRecipes');\n    localStorage.removeItem('inProgressRecipes');\n  };\n\n  return (\n    <div className=\"comidas-body perfil\">\n      <Header title=\"Perfil\" search={ false } />\n      <h3 className=\"email\" data-testid=\"profile-email\">{getEmail()}</h3>\n      <div className=\"btn-container\">\n        <Link to=\"/receitas-feitas\">\n          <div className=\"btn-perfil\" data-testid=\"profile-done-btn\">\n            Receitas Feitas\n          </div>\n        </Link>\n        <Link to=\"/receitas-favoritas\">\n          <div className=\"btn-perfil\" data-testid=\"profile-favorite-btn\">\n            Receitas Favoritas\n          </div>\n        </Link>\n        <Link to=\"/\">\n          <button\n            className=\"btn-perfil\"\n            type=\"button\"\n            data-testid=\"profile-logout-btn\"\n            onClick={ clearLocalStorage }\n          >\n            Sair\n          </button>\n        </Link>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Perfil;\n","const MAX_MONTH = 10;\nconst getCurrentDate = () => {\n  const newDate = new Date();\n  const date = newDate.getDate();\n  const month = newDate.getMonth() + 1;\n  const year = newDate.getFullYear();\n\n  return (\n    `${year}/${month < MAX_MONTH\n      ? `0${month}` : `${month}`}/${date}`);\n};\n\nconst setDoneFood = (recipeObject) => {\n  console.log('entrou no if comidas');\n  const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n\n  const allKeys = Object.keys(recipeObject);\n\n  const objeto = {\n    id: recipeObject.idMeal,\n    type: 'comida',\n    area: allKeys.some(\n      (elem) => elem === 'strArea',\n    ) ? recipeObject.strArea : '',\n    category: allKeys.some(\n      (elem) => elem === 'strCategory',\n    ) ? recipeObject.strCategory : '',\n    alcoholicOrNot: allKeys.some(\n      (elem) => elem === 'strAlcoholic',\n    ) ? recipeObject.strAlcoholic : '',\n    name: recipeObject.strMeal,\n    image: recipeObject.strMealThumb,\n    doneDate: getCurrentDate(),\n    tags: recipeObject.strTags !== null\n      ? recipeObject.strTags.split(',').map((elem) => elem)\n      : [],\n  };\n\n  const updateDone = [\n    ...doneRecipes,\n    objeto,\n  ];\n\n  localStorage.setItem('doneRecipes', JSON.stringify(updateDone));\n};\n\nconst setDoneFoodElse = (recipeObject) => {\n  console.log('entrou no if comidas');\n\n  const allKeys = Object.keys(recipeObject);\n\n  const objeto = {\n    id: recipeObject.idMeal,\n    type: 'comida',\n    area: allKeys.some(\n      (elem) => elem === 'strArea',\n    ) ? recipeObject.strArea : '',\n    category: allKeys.some(\n      (elem) => elem === 'strCategory',\n    ) ? recipeObject.strCategory : '',\n    alcoholicOrNot: allKeys.some(\n      (elem) => elem === 'strAlcoholic',\n    ) ? recipeObject.strAlcoholic : '',\n    name: recipeObject.strMeal,\n    image: recipeObject.strMealThumb,\n    doneDate: getCurrentDate(),\n    tags: recipeObject.strTags !== null\n      ? recipeObject.strTags.split(',').map((elem) => elem)\n      : [],\n  };\n\n  const updateFav = [\n    objeto,\n  ];\n\n  localStorage.setItem('doneRecipes', JSON.stringify(updateFav));\n};\n\nconst setDoneDrink = (recipeObject) => {\n  console.log('entrou no if Bebidas');\n  const favoriteRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n\n  const allKeys = Object.keys(recipeObject);\n\n  const objeto = {\n    id: recipeObject.idDrink,\n    type: 'bebida',\n    area: allKeys.some(\n      (elem) => elem === 'strArea',\n    ) ? recipeObject.strArea : '',\n    category: allKeys.some(\n      (elem) => elem === 'strCategory',\n    ) ? recipeObject.strCategory : '',\n    alcoholicOrNot: allKeys.some(\n      (elem) => elem === 'strAlcoholic',\n    ) ? recipeObject.strAlcoholic : '',\n    name: recipeObject.strDrink,\n    image: recipeObject.strDrinkThumb,\n    doneDate: getCurrentDate(),\n    tags: '',\n  };\n\n  const updateFav = [\n    ...favoriteRecipes,\n    objeto,\n  ];\n\n  localStorage.setItem('doneRecipes', JSON.stringify(updateFav));\n};\n\nconst setDoneDrinkElse = (recipeObject) => {\n  console.log('entrou no if bebidas');\n\n  const allKeys = Object.keys(recipeObject);\n\n  const objeto = {\n    id: recipeObject.idDrink,\n    type: 'bebida',\n    area: allKeys.some(\n      (elem) => elem === 'strArea',\n    ) ? recipeObject.strArea : '',\n    category: allKeys.some(\n      (elem) => elem === 'strCategory',\n    ) ? recipeObject.strCategory : '',\n    alcoholicOrNot: allKeys.some(\n      (elem) => elem === 'strAlcoholic',\n    ) ? recipeObject.strAlcoholic : '',\n    name: recipeObject.strDrink,\n    image: recipeObject.strDrinkThumb,\n    doneDate: getCurrentDate(),\n    tags: '',\n  };\n\n  const updateFav = [\n    objeto,\n  ];\n\n  localStorage.setItem('doneRecipes', JSON.stringify(updateFav));\n};\n\nconst setDoneRecipes = (recipeObject, url) => {\n  console.log('inicio');\n  if (localStorage.getItem('doneRecipes') !== null) {\n    console.log('entrou no if');\n\n    if (url.includes('comidas')) {\n      setDoneFood(recipeObject);\n    }\n    if (url.includes('bebidas')) {\n      setDoneDrink(recipeObject);\n    }\n  } else {\n    if (url.includes('comidas')) {\n      setDoneFoodElse(recipeObject);\n    }\n    if (url.includes('bebidas')) {\n      setDoneDrinkElse(recipeObject);\n    }\n  }\n};\n\nexport default setDoneRecipes;\n","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport RecipeContext from '../context/RecipeContext';\nimport '../styles/ButtonFinish.css';\nimport setDoneRecipes from '../services/setDoneRecipes';\n\nfunction ButtonFinish({ objDetail }) {\n  const { verifyCheckbox } = useContext(RecipeContext);\n  const history = useHistory();\n  const urlType = history.location.pathname.split('/');\n  console.log(urlType);\n  console.log(objDetail[0]);\n\n  const handleFinish = () => {\n    setDoneRecipes(objDetail[0], urlType[1]);\n    history.push('/receitas-feitas');\n  };\n\n  return (\n    <button\n      className=\"button-finish\"\n      type=\"button\"\n      data-testid=\"finish-recipe-btn\"\n      disabled={ !verifyCheckbox.every((e) => e === true) }\n      onClick={ handleFinish }\n    >\n      Finalizar Receita\n    </button>\n  );\n}\n\nButtonFinish.propTypes = {\n  objDetail: PropTypes.shape(\n    PropTypes.any,\n  ).isRequired,\n};\n\nexport default ButtonFinish;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipeContext from '../context/RecipeContext';\n\nfunction IngredientsCheckbox({ objDetail, id, url }) {\n  const { setVerifyCheckbox } = useContext(RecipeContext);\n  const verifyIngredientsChecked = () => {\n    if (localStorage.getItem('inProgressRecipes') !== null) {\n      const inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n      if (url.includes('comida')) {\n        return inProgressRecipes.meals[id];\n      }\n      if (url.includes('bebida')) {\n        return inProgressRecipes.cocktails[id];\n      }\n    } else { return ['textoaleatorio']; }\n  };\n\n  const verifyCheckbox = ({ target }) => {\n    const array = [];\n    const arrayLi = target.parentNode.parentNode.parentNode.childNodes;\n    arrayLi.forEach((elem) => {\n      const checkbox = elem.firstChild.firstChild;\n      if (checkbox.checked) {\n        array.push(true);\n      } else {\n        array.push(false);\n      }\n    });\n    // console.log(array);\n    setVerifyCheckbox(array);\n  };\n\n  const handleChange = ({ target }) => {\n    const ol = target.parentNode.parentNode.parentNode;\n    const lista = ol.childNodes;\n    const listaDeIngredientes = [];\n    // console.log(ol);\n\n    lista.forEach((elem) => {\n      const checkbox = elem.firstChild.firstChild;\n      // console.log(checkbox);\n      if (checkbox.checked) {\n        listaDeIngredientes.push(checkbox.id);\n      }\n    });\n\n    // console.log(listaDeIngredientes);\n    if (localStorage.getItem('inProgressRecipes') !== null) {\n      const inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n      if (url.includes('comidas')) {\n        localStorage.setItem('inProgressRecipes', JSON.stringify({\n          ...inProgressRecipes,\n          meals: {\n            ...inProgressRecipes.meals,\n            [id]: listaDeIngredientes,\n          },\n        }));\n      }\n      if (url.includes('bebidas')) {\n        localStorage.setItem('inProgressRecipes', JSON.stringify({\n          ...inProgressRecipes,\n          cocktails: {\n            ...inProgressRecipes.cocktails,\n            [id]: listaDeIngredientes,\n          },\n        }));\n      }\n    } else {\n      if (url.includes('comidas')) {\n        localStorage.setItem(\n          'inProgressRecipes', JSON.stringify({ meals: { [id]: listaDeIngredientes } }),\n        );\n      }\n      if (url.includes('bebidas')) {\n        localStorage.setItem('inProgressRecipes', JSON.stringify(\n          { cocktails: { [id]: listaDeIngredientes } },\n        ));\n      }\n    }\n    const SELECTED_LI = 'selected-li';\n    if (!target.checked) {\n      target.parentNode.classList.remove(SELECTED_LI);\n    } else { target.parentNode.classList.add(SELECTED_LI); }\n  };\n  const getIngredients = () => {\n    const ingredientes = Object.entries(objDetail[0]);\n\n    const measure = ingredientes.filter((elem) => (\n      elem[0].includes('strMeasure') && elem[1] !== null && elem[1] !== ''\n    ));\n    const filtering = ingredientes.filter((element) => (\n      element[0].includes('strIngredient') && element[1] !== null && element[1] !== ''));\n\n    const results = filtering.map((elem, index) => {\n      const isChecked = verifyIngredientsChecked().some((e) => e === elem[1]);\n      return (\n        <li\n          name=\"li-ingredients\"\n          key={ elem[1] }\n          data-testid={ `${index}-ingredient-step` }\n        >\n          <label\n            htmlFor={ elem[1] }\n            className={ isChecked ? 'selected-li' : '' }\n          >\n            <input\n              defaultChecked={ isChecked }\n              onChange={ handleChange }\n              type=\"checkbox\"\n              id={ elem[1] }\n            />\n            {elem[1]}\n            <span>{measure[index] === undefined ? '' : measure[index][1]}</span>\n          </label>\n        </li>);\n    });\n\n    return results;\n  };\n\n  return (\n    <ol\n      onChange={ verifyCheckbox }\n      className=\"ingredient-list\"\n      id=\"ingredient-list\"\n    >\n      {getIngredients()}\n    </ol>\n  );\n}\n\nIngredientsCheckbox.propTypes = {\n  id: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  objDetail: PropTypes.shape(\n    PropTypes.any,\n  ).isRequired,\n};\n\nexport default IngredientsCheckbox;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport '../styles/Detalhes.css';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport shareIcon from '../images/shareIcon.svg';\nimport Loading from '../components/Loading';\nimport RecipeContext from '../context/RecipeContext';\nimport LinkCopiado from '../components/LinkCopiado';\nimport ButtonFinish from '../components/ButtonFinish';\nimport IngredientsCheckbox from '../components/IngredientsCheckbox';\nimport FavoriteBtn from '../components/FavoriteBtn';\n\nfunction DetalhesInProgress() {\n  const TWO_SECONDS = 2000;\n  const history = useHistory();\n  const urlText = history.location.pathname;\n  const urlDetails = urlText.split('/in-progress');\n  console.log(urlDetails[0]);\n  const id = urlText.split('/')[2];\n  const [objDetail, setObjDetail] = useState([]);\n  const [loading, setLoading] = useState(true);\n  console.log(objDetail);\n\n  const { setCopied } = useContext(RecipeContext);\n\n  const requestByID = async () => {\n    let response = [];\n    if (urlText.includes('bebidas')) {\n      response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const responseJson = await response.json();\n      await setObjDetail(responseJson.drinks);\n    }\n    if (urlText.includes('comidas')) {\n      response = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const responseJson = await response.json();\n      await setObjDetail(responseJson.meals);\n    }\n    setTimeout(() => {\n      setLoading(false);\n    }, TWO_SECONDS);\n  };\n\n  const handleCopied = () => {\n    setCopied(true);\n    setTimeout(() => {\n      setCopied(false);\n    }, TWO_SECONDS);\n  };\n\n  useEffect(() => {\n    requestByID();\n  }, []);\n\n  const renderDrink = () => (\n    <div className=\"details\">\n      <h1\n        data-testid=\"recipe-category\"\n      >\n        {`${objDetail[0].strCategory} (${objDetail[0].strAlcoholic})`}\n      </h1>\n      <h2 data-testid=\"recipe-title\">{objDetail[0].strDrink}</h2>\n      <img\n        data-testid=\"recipe-photo\"\n        className=\"food-image\"\n        src={ objDetail[0].strDrinkThumb }\n        alt={ objDetail[0].strDrink }\n      />\n      <div className=\"icons\">\n        <CopyToClipboard\n          text={ `http://localhost:3000${urlDetails[0]}` }\n          onCopy={ () => {\n            handleCopied();\n          } }\n        >\n          <input\n            type=\"image\"\n            data-testid=\"share-btn\"\n            src={ shareIcon }\n            alt={ objDetail[0].strDrink }\n          />\n        </CopyToClipboard>\n        <LinkCopiado />\n        <FavoriteBtn urlText={ urlText } objDetail={ objDetail } id={ id } />\n      </div>\n      <IngredientsCheckbox objDetail={ objDetail } id={ id } url={ urlText } />\n      <p data-testid=\"instructions\">{objDetail[0].strInstructions}</p>\n      <ButtonFinish objDetail={ objDetail } />\n    </div>\n\n  );\n\n  const renderFood = () => (\n    <div className=\"details\">\n      <h1 data-testid=\"recipe-category\">{objDetail[0].strCategory}</h1>\n      <h2 data-testid=\"recipe-title\">{objDetail[0].strMeal}</h2>\n      <img\n        data-testid=\"recipe-photo\"\n        src={ objDetail[0].strMealThumb }\n        alt={ objDetail[0].strMeal }\n      />\n      <div className=\"icons\">\n        <CopyToClipboard\n          text={ `http://localhost:3000${urlDetails[0]}` }\n          onCopy={ () => {\n            handleCopied();\n          } }\n        >\n          <input\n            type=\"image\"\n            data-testid=\"share-btn\"\n            src={ shareIcon }\n            alt={ objDetail[0].strMeal }\n          />\n        </CopyToClipboard>\n        <LinkCopiado />\n        <FavoriteBtn urlText={ urlText } objDetail={ objDetail } id={ id } />\n      </div>\n      <IngredientsCheckbox objDetail={ objDetail } id={ id } url={ urlText } />\n      <p data-testid=\"instructions\">{objDetail[0].strInstructions}</p>\n      <ButtonFinish objDetail={ objDetail } />\n    </div>\n\n  );\n\n  const render = () => {\n    const value = history.location.pathname;\n    if (value.includes('comidas')) {\n      return renderFood();\n    }\n    if (value.includes('bebidas')) {\n      return renderDrink();\n    }\n  };\n\n  return (\n    <div>\n      {loading ? <Loading /> : render()}\n    </div>\n  );\n}\n\nexport default DetalhesInProgress;\n","import React, { useContext } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Link } from 'react-router-dom';\nimport RecipeContext from '../context/RecipeContext';\nimport shareIcon from '../images/shareIcon.svg';\n\nimport '../styles/CardFeitas.css';\n\nfunction CardFeitas({ objDetail, index }) {\n  const { setCopied } = useContext(RecipeContext);\n  const TWO_SECONDS = 2000;\n\n  const gettingTags = () => {\n    if (objDetail.type === 'comida') {\n      return objDetail.tags.map((e, i) => {\n        if (i < 2) {\n          return (\n            <span\n              className=\"tags\"\n              key={ e }\n              data-testid={ `${index}-${e}-horizontal-tag` }\n            >\n              {e}\n            </span>\n          );\n        }\n        return '';\n      });\n    }\n    return '';\n  };\n\n  const handleCopied = () => {\n    setCopied(true);\n    setTimeout(() => {\n      setCopied(false);\n    }, TWO_SECONDS);\n  };\n\n  const render = () => (\n    <div className=\"done-card-body\">\n      <div className=\"bg\" />\n      <div className=\"card-content\">\n        <Link to={ `/${objDetail.type}s/${objDetail.id}` }>\n          <img\n            src={ objDetail.image }\n            alt={ objDetail.name }\n            data-testid={ `${index}-horizontal-image` }\n          />\n        </Link>\n\n        <section>\n          <Link to={ `/${objDetail.type}s/${objDetail.id}` }>\n            <h1\n              data-testid={ `${index}-horizontal-name` }\n            >\n              {objDetail.name}\n            </h1>\n          </Link>\n          <h3\n            data-testid={ `${index}-horizontal-top-text` }\n          >\n\n            <p className=\"text\">\n              {objDetail.area}\n              {objDetail.area && ' - '}\n              {objDetail.category}\n            </p>\n            <p className=\"text\">\n              {objDetail.alcoholicOrNot}\n            </p>\n\n          </h3>\n          <div className=\"tag-container\">\n            {gettingTags()}\n          </div>\n        </section>\n        <div>\n          <CopyToClipboard\n            text={ `http://localhost:3000/${objDetail.type}s/${objDetail.id}` }\n            onCopy={ () => {\n              handleCopied();\n            } }\n          >\n            <input\n              className=\"share-btn\"\n              type=\"image\"\n              data-testid={ `${index}-horizontal-share-btn` }\n              src={ shareIcon }\n              alt={ objDetail.id }\n            />\n          </CopyToClipboard>\n          <p\n            className=\"finish-date\"\n            data-testid={ `${index}-horizontal-done-date` }\n          >\n            {objDetail.doneDate}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n\n  return render();\n}\n\nexport default CardFeitas;\n","import React, { useState } from 'react';\nimport CardFeitas from '../components/CardFeitas';\nimport Header from '../components/Header';\nimport LinkCopiado from '../components/LinkCopiado';\n\nimport '../styles/ReceitasFeitas.css';\n\nfunction ReceitasFeitas() {\n  const [filterType, setFilterType] = useState('All');\n\n  const verify = () => {\n    let filtered = [];\n    if (localStorage.getItem('doneRecipes') !== null) {\n      const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n      if (filterType !== 'All') {\n        filtered = doneRecipes.filter((elem) => elem.type === filterType);\n      } else {\n        filtered = doneRecipes;\n      }\n      return (\n        filtered.map((elem, index) => (\n          <CardFeitas key={ index } objDetail={ elem } index={ index } />\n        ))\n      );\n    }\n    return <p className=\"not-done-recipes\">Você não tem receitas feitas.</p>;\n  };\n\n  const handleClick = (type) => {\n    setFilterType(type);\n  };\n\n  return (\n    <div className=\"done-recipes-body\">\n      <Header title=\"Receitas Feitas\" search={ false } />\n      <div className=\"background-color\" />\n      <div className=\"head\">\n        <div className=\"done-button-content\">\n          <button\n            type=\"button\"\n            data-testid=\"filter-by-all-btn\"\n            onClick={ () => handleClick('All') }\n          >\n            All\n          </button>\n          <button\n            type=\"button\"\n            data-testid=\"filter-by-food-btn\"\n            onClick={ () => handleClick('comida') }\n          >\n            Food\n          </button>\n          <button\n            type=\"button\"\n            data-testid=\"filter-by-drink-btn\"\n            onClick={ () => handleClick('bebida') }\n\n          >\n            Drinks\n          </button>\n        </div>\n      </div>\n      <LinkCopiado />\n      {verify()}\n\n    </div>\n  );\n}\n\nexport default ReceitasFeitas;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/NotFound.css';\n\nfunction NotFound({ history }) {\n  return (\n    <div className=\"not-found-body\">\n      <div className=\"message\">\n        <h1>404</h1>\n        <h2 className=\"not-found\">Not Found</h2>\n        <button type=\"button\" onClick={ history.goBack }>voltar</button>\n      </div>\n    </div>\n  );\n}\n\nNotFound.propTypes = {\n  history: PropTypes.shape(PropTypes.any).isRequired,\n};\n\nexport default NotFound;\n","import React, { useContext } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Link } from 'react-router-dom';\nimport RecipeContext from '../context/RecipeContext';\nimport shareIcon from '../images/shareIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\n\nimport '../styles/CardFavoritas.css';\n\nfunction CardFavoritas({ objDetail, index }) {\n  const { setCopied, setReceitasFav } = useContext(RecipeContext);\n  const TWO_SECONDS = 2000;\n\n  const handleCopied = () => {\n    setCopied(true);\n    setTimeout(() => {\n      setCopied(false);\n    }, TWO_SECONDS);\n  };\n\n  const removeFavorite = () => {\n    if (localStorage.getItem('favoriteRecipes') !== null) {\n      const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n      const updatedFavorites = favoriteRecipes.filter((elem) => elem.id !== objDetail.id);\n      localStorage.setItem('favoriteRecipes', JSON.stringify(updatedFavorites));\n      setReceitasFav(updatedFavorites);\n    }\n  };\n\n  const render = () => (\n    <div className=\"fav-card-body\">\n\n      <div className=\"card-content\">\n        <Link to={ `/${objDetail.type}s/${objDetail.id}` }>\n          <img\n            src={ objDetail.image }\n            alt={ objDetail.name }\n            data-testid={ `${index}-horizontal-image` }\n          />\n        </Link>\n\n        <section>\n          <Link to={ `/${objDetail.type}s/${objDetail.id}` }>\n            <p\n              className=\"title\"\n              data-testid={ `${index}-horizontal-name` }\n            >\n              {objDetail.name}\n            </p>\n          </Link>\n          <h3\n            data-testid={ `${index}-horizontal-top-text` }\n          >\n\n            <p>\n              {objDetail.area}\n              {objDetail.area && ' - '}\n              {objDetail.category}\n            </p>\n            <p>\n              {objDetail.alcoholicOrNot}\n            </p>\n\n          </h3>\n\n        </section>\n        <div className=\"card-btn\">\n\n          <CopyToClipboard\n            text={ `http://localhost:3000/${objDetail.type}s/${objDetail.id}` }\n            onCopy={ () => {\n              handleCopied();\n            } }\n          >\n\n            <input\n              className=\"share-btn\"\n              type=\"image\"\n              data-testid={ `${index}-horizontal-share-btn` }\n              src={ shareIcon }\n              alt={ objDetail.id }\n            />\n          </CopyToClipboard>\n          <input\n            className=\"favorite-btn\"\n            onClick={ () => removeFavorite() }\n            type=\"image\"\n            data-testid={ `${index}-horizontal-favorite-btn` }\n            src={ blackHeartIcon }\n            alt=\"foto do item\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n\n  return render();\n}\n\nexport default CardFavoritas;\n","const getInformation = (callback) => {\n  if ((localStorage.getItem('favoriteRecipes') !== null)) {\n    callback(JSON.parse(localStorage.getItem('favoriteRecipes')));\n  }\n};\n\nexport default getInformation;\n","import React, { useContext, useEffect, useState } from 'react';\nimport CardFavoritas from '../components/CardFavoritas';\nimport Header from '../components/Header';\nimport RecipeContext from '../context/RecipeContext';\nimport getInformation from '../services/getInformation';\nimport LinkCopiado from '../components/LinkCopiado';\n\nfunction ReceitasFavoritas() {\n  const [filterType, setFilterType] = useState('All');\n  const { receitasFav, setReceitasFav } = useContext(RecipeContext);\n\n  const verify = () => {\n    let filtered = [];\n    const favoriteRecipes = receitasFav;\n    if (filterType !== 'All') {\n      filtered = favoriteRecipes.filter((elem) => elem.type === filterType);\n    } else {\n      filtered = favoriteRecipes;\n    }\n    return filtered;\n  };\n\n  const handleClick = (type) => {\n    setFilterType(type);\n  };\n\n  useEffect(() => {\n    getInformation(setReceitasFav);\n  }, []);\n\n  return (\n    <div className=\"done-recipes-body\">\n      <Header title=\"Receitas Favoritas\" search={ false } />\n      <div className=\"background-color\" />\n      <div className=\"head\">\n        <div className=\"done-button-content\">\n          <button\n            type=\"button\"\n            data-testid=\"filter-by-all-btn\"\n            onClick={ () => handleClick('All') }\n          >\n            All\n          </button>\n          <button\n            type=\"button\"\n            data-testid=\"filter-by-food-btn\"\n            onClick={ () => handleClick('comida') }\n          >\n            Food\n          </button>\n          <button\n            type=\"button\"\n            data-testid=\"filter-by-drink-btn\"\n            onClick={ () => handleClick('bebida') }\n\n          >\n            Drinks\n          </button>\n        </div>\n      </div>\n      <LinkCopiado />\n      {verify().map((elem, index) => (\n        <CardFavoritas key={ index } objDetail={ elem } index={ index } />\n      ))}\n    </div>\n  );\n}\n\nexport default ReceitasFavoritas;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Footer from '../../components/Footer';\nimport Header from '../../components/Header';\n\nfunction ExplorarBebidas({ history }) {\n  const fetchSurpriseDrink = async () => {\n    const response = await fetch('https://www.thecocktaildb.com/api/json/v1/1/random.php');\n    const result = await response.json();\n    const id = result.drinks[0].idDrink;\n    console.log(result.drinks[0]);\n    history.push(`/bebidas/${id}`);\n  };\n\n  return (\n    <div className=\"explore-big\">\n      <Header title=\"Explorar Bebidas\" search={ false } />\n      <div className=\"btn-content\">\n        <Link to=\"/explorar/bebidas/ingredientes\">\n          <span data-testid=\"explore-by-ingredient\">\n            Por Ingredientes\n          </span>\n        </Link>\n        <button\n          type=\"button\"\n          data-testid=\"explore-surprise\"\n          onClick={ () => fetchSurpriseDrink() }\n        >\n          Me Surpreenda!\n        </button>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nExplorarBebidas.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nexport default ExplorarBebidas;\n","import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipeContext from '../../context/RecipeContext';\nimport Header from '../../components/Header';\nimport Footer from '../../components/Footer';\n\nfunction ExplorarBebidasIngredientes({ history }) {\n  const {\n    setMeals, setIsDrinkLoading, setCameFromIngredients } = useContext(RecipeContext);\n  const [ingredientes, setIngredientes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const TWELVE_INGREDIENTS = 12;\n\n  const fetchIngredients = async () => {\n    const response = await fetch('https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list');\n    const result = await response.json();\n    const finalResults = result.drinks.filter((elem, index) => {\n      if (index < TWELVE_INGREDIENTS) {\n        return elem;\n      }\n      return '';\n    });\n    setIngredientes(finalResults);\n    setLoading(false);\n  };\n\n  const fetchAndRedirect = async ({ target }) => {\n    setIsDrinkLoading(true);\n    setCameFromIngredients(true);\n    const ingredientName = target.parentNode.firstChild.innerText;\n    console.log(ingredientName);\n    fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${ingredientName}`)\n      .then((response) => response.json())\n      .then((data) => setMeals(data.drinks))\n      .then(() => history.push('/bebidas'))\n      .then(() => {\n        setIsDrinkLoading(false);\n        setCameFromIngredients(true);\n      });\n  };\n\n  useEffect(() => {\n    fetchIngredients();\n  }, []);\n\n  return (\n    <div className=\"explore-big per-ingredients\">\n      <Header title=\"Explorar Ingredientes\" search={ false } />\n      <div className=\"list\">\n\n        {!loading && ingredientes.map((elem, index) => (\n          <label\n            htmlFor={ `${index}-checkbox` }\n            key={ `${elem.idIngredient1}, ${index} ` }\n          >\n            <div\n              key={ `${elem.idIngredient1}, ${index} ` }\n              data-testid={ `${index}-ingredient-card` }\n            >\n              <h5 data-testid={ `${index}-card-name` }>\n                {elem.strIngredient1}\n              </h5>\n              <img\n                data-testid={ `${index}-card-img` }\n                src={ `https://www.thecocktaildb.com/images/ingredients/${elem.strIngredient1}-Small.png` }\n                alt={ elem.strIngredient1 }\n              />\n            </div>\n            <input\n              type=\"checkbox\"\n              id={ `${index}-checkbox` }\n              onChange={ fetchAndRedirect }\n            />\n          </label>\n        ))}\n      </div>\n\n      <Footer />\n    </div>\n  );\n}\n\nExplorarBebidasIngredientes.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nexport default ExplorarBebidasIngredientes;\n","import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport RecipeContext from '../../context/RecipeContext';\nimport Header from '../../components/Header';\nimport Footer from '../../components/Footer';\n\nfunction ExplorarComidasIngredientes({ history }) {\n  const {\n    setCameFromIngredients, setMeals, setIsDrinkLoading } = useContext(RecipeContext);\n\n  const [ingredientes, setIngredientes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const TWELVE_INGREDIENTS = 12;\n\n  const fetchIngredients = async () => {\n    const response = await fetch('https://www.themealdb.com/api/json/v1/1/list.php?i=list');\n    const result = await response.json();\n    const finalResults = result.meals.filter((elem, index) => {\n      if (index < TWELVE_INGREDIENTS) {\n        return elem;\n      }\n      return '';\n    });\n    setIngredientes(finalResults);\n    setLoading(false);\n  };\n\n  const fetchAndRedirect = async ({ target }) => {\n    setCameFromIngredients(true);\n    await setIsDrinkLoading(true);\n    const ingredientName = target.parentNode.firstChild.innerText;\n    console.log(ingredientName);\n    fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?i=${ingredientName}`)\n      .then((response) => response.json())\n      .then((data) => setMeals(data.meals))\n      .then(() => history.push('/comidas'))\n      .then(() => {\n        setIsDrinkLoading(false);\n        setCameFromIngredients(true);\n      });\n  };\n\n  useEffect(() => {\n    fetchIngredients();\n  }, []);\n\n  return (\n    <div className=\"explore-big per-ingredients\">\n      <Header title=\"Explorar Ingredientes\" search={ false } />\n      <div className=\"list\">\n\n        {!loading && ingredientes.map((elem, index) => (\n          <label\n            htmlFor={ `${index}-checkbox` }\n            key={ `${elem.idIngredient}, ${index} ` }\n          >\n            <div\n              key={ `${elem.idIngredient}, ${index} ` }\n              data-testid={ `${index}-ingredient-card` }\n            >\n              <h5 data-testid={ `${index}-card-name` }>\n                {elem.strIngredient}\n              </h5>\n              <img\n                data-testid={ `${index}-card-img` }\n                src={ `https://www.themealdb.com/images/ingredients/${elem.strIngredient}-Small.png` }\n                alt={ elem.strIngredient }\n              />\n            </div>\n            <input\n              type=\"checkbox\"\n              id={ `${index}-checkbox` }\n              onChange={ fetchAndRedirect }\n            />\n          </label>\n        ))}\n      </div>\n\n      <Footer />\n    </div>\n  );\n}\n\nExplorarComidasIngredientes.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nexport default ExplorarComidasIngredientes;\n","import React, { useContext, useEffect, useState } from 'react';\nimport Footer from '../../components/Footer';\nimport Header from '../../components/Header';\nimport RecipesList from '../../components/RecipesList';\nimport RecipeContext from '../../context/RecipeContext';\n\nfunction ExpComidasArea() {\n  const {\n    directRequestFood, setFilterByArea,\n    setMeals, filterByArea } = useContext(RecipeContext);\n  const [areas, setAreas] = useState([]);\n\n  const fetchListArea = () => {\n    fetch('https://www.themealdb.com/api/json/v1/1/list.php?a=list')\n      .then((response) => response.json())\n      .then((data) => setAreas(data.meals));\n  };\n\n  const filterByAreas = ({ target }) => {\n    if (target.value === 'All') {\n      directRequestFood();\n    } else {\n      setFilterByArea(target.value);\n      fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?a=${target.value}`)\n        .then((response) => response.json())\n        .then((data) => setMeals(data.meals));\n    }\n  };\n\n  useEffect(() => {\n    directRequestFood();\n    fetchListArea();\n\n    return setFilterByArea('All');\n  }, []);\n\n  return (\n    <div className=\"comidas-body explore-big\">\n      <Header title=\"Explorar Origem\" />\n      <div className=\"explore-area\">\n        <select\n          value={ filterByArea }\n          data-testid=\"explore-by-area-dropdown\"\n          className=\"dropdown-areas\"\n          // onChange={ ({ target }) => setFilterByArea(target.value) }\n          onChange={ filterByAreas }\n        >\n          <option data-testid=\"All-option\">All</option>\n          {areas.map(({ strArea }, i) => (\n            <option key={ i } data-testid={ `${strArea}-option` }>{strArea}</option>\n          ))}\n        </select>\n      </div>\n      <RecipesList />\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExpComidasArea;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport ExplorarComidas from './Pages/Explorar/ExplorarComidas';\nimport Provider from './context/Provider';\nimport Bebidas from './Pages/Bebidas';\nimport Comidas from './Pages/Comidas';\nimport Detalhes from './Pages/Detalhes';\nimport Explorar from './Pages/Explorar/Explorar';\nimport Login from './Pages/Login';\nimport Perfil from './Pages/Perfil';\nimport DetalhesInProgress from './Pages/DetalhesInProgress';\nimport ReceitasFeitas from './Pages/ReceitasFeitas';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport NotFound from './Pages/NotFound';\n\nimport './App.css';\nimport ReceitasFavoritas from './Pages/ReceitasFavoritas';\nimport ExplorarBebidas from './Pages/Explorar/ExplorarBebidas';\nimport ExplorarBebidasIngredientes from './Pages/Explorar/ExplorarBebidasIngredientes';\nimport ExplorarComidasIngredientes from './Pages/Explorar/ExplorarComidasIngredientes';\nimport ExpComidasArea from './Pages/Explorar/ExpComidasArea';\n\nfunction App() {\n  return (\n    <Provider>\n      <Switch>\n        <Route exact path=\"/\" component={ Login } />\n        <Route exact path=\"/comidas\" component={ Comidas } />\n        <Route exact path=\"/comidas/:id\" component={ Detalhes } />\n        <Route exact path=\"/bebidas/:id\" component={ Detalhes } />\n        <Route exact path=\"/bebidas\" component={ Bebidas } />\n        <Route exact path=\"/perfil\" component={ Perfil } />\n        <Route exact path=\"/explorar\" component={ Explorar } />\n        <Route exact path=\"/bebidas/:id\" component={ Detalhes } />\n        <Route exact path=\"/comidas/:id/in-progress\" component={ DetalhesInProgress } />\n        <Route exact path=\"/bebidas/:id/in-progress\" component={ DetalhesInProgress } />\n        <Route exact path=\"/receitas-feitas\" component={ ReceitasFeitas } />\n        <Route exact path=\"/receitas-favoritas\" component={ ReceitasFavoritas } />\n        <Route exact path=\"/explorar/comidas\" component={ ExplorarComidas } />\n        <Route exact path=\"/explorar/bebidas\" component={ ExplorarBebidas } />\n        <Route exact path=\"/explorar/comidas/area\" component={ ExpComidasArea } />\n        <Route\n          exact\n          path=\"/explorar/comidas/ingredientes\"\n          component={ ExplorarComidasIngredientes }\n        />\n        <Route\n          exact\n          path=\"/explorar/bebidas/ingredientes\"\n          component={ ExplorarBebidasIngredientes }\n        />\n        <Route component={ NotFound } />\n      </Switch>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}